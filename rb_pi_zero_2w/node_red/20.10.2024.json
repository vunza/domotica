[
    {
        "id": "0beaa6996a1f29f5",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b55905ab0ab9e1a",
        "type": "tab",
        "label": "Testes",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1112a3ea.54efdc",
        "type": "tab",
        "label": "Z2M Admin",
        "disabled": true,
        "info": ""
    },
    {
        "id": "c3ab0dbe501d9f51",
        "type": "group",
        "z": "0beaa6996a1f29f5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4a536bf03d77fa1b",
            "2ccd1e847106724a",
            "1297e78492203004",
            "1cdb8dedb7d260f5",
            "37c476c514361a18",
            "1099018ad3951c36",
            "bc33560d5b48ff20",
            "43961d85d615df4c"
        ],
        "x": 54,
        "y": 319,
        "w": 512,
        "h": 182
    },
    {
        "id": "3ee1f23d948eca69",
        "type": "group",
        "z": "0beaa6996a1f29f5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "71e853f91d4bce27",
            "9a06ab53c49070f5",
            "fd26370ab7ab7785",
            "1509f37ac7cea351",
            "524f549acd731bb4",
            "54cd2eab727bd786",
            "b37e4fcea4db6f07"
        ],
        "x": 684,
        "y": 119,
        "w": 542,
        "h": 182
    },
    {
        "id": "517334cfab6ca23d",
        "type": "group",
        "z": "0beaa6996a1f29f5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "309f36a42160b721",
            "90e27a5e03e949c4",
            "28ce76cc6b01957c",
            "53c67c8f7a5626f5",
            "41eb52916554a285",
            "e2a37c97da061523",
            "02fc8a877b7ea6d6",
            "f23cb857aea720fd"
        ],
        "x": 34,
        "y": 99,
        "w": 612,
        "h": 202
    },
    {
        "id": "d9285f121fa355e0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3ac1d7ddd2d026c3",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Painel",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "63a501c8f9a7995a",
        "type": "ui_tab",
        "name": "Testes",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2b8b535d0f438db2",
        "type": "ui_group",
        "name": "Iluminação",
        "tab": "412b279c821be93e",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": true,
        "className": ""
    },
    {
        "id": "542f751e15337c46",
        "type": "websocket-listener",
        "path": "/ws/ui",
        "wholemsg": "false"
    },
    {
        "id": "25c1a189950c0bad",
        "type": "ui_group",
        "name": "Corredor",
        "tab": "63a501c8f9a7995a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "412b279c821be93e",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e0d7e8f2b4221096",
        "type": "ui_group",
        "name": "Configurações",
        "tab": "412b279c821be93e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a8fb24efc195e0c7",
        "type": "ui_group",
        "name": "Timer",
        "tab": "63a501c8f9a7995a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4a0d28640b71ab1d",
        "type": "ui_group",
        "name": "Rename",
        "tab": "63a501c8f9a7995a",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "46c26955ac1c6966",
        "type": "ui_group",
        "name": "Cards",
        "tab": "63a501c8f9a7995a",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": true,
        "className": ""
    },
    {
        "id": "e993053920e2785e",
        "type": "ui_group",
        "name": "Configurar Telefones",
        "tab": "b83d31e9ef55e681",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b83d31e9ef55e681",
        "type": "ui_tab",
        "name": "Switches",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "38009ddc.858562",
        "type": "ui_group",
        "name": "Device management",
        "tab": "4d997c7f.f72024",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f5594d13.23bec",
        "type": "mqtt-broker",
        "name": "mqtt",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d40979a3.d11a08",
        "type": "ui_group",
        "name": "Bridge configuration",
        "tab": "4d997c7f.f72024",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "fd4925c4.d13458",
        "type": "ui_group",
        "name": "Network map",
        "tab": "6db85f70.6d8a2",
        "order": 1,
        "disp": false,
        "width": "27",
        "collapse": false
    },
    {
        "id": "d9a11d4b.0417f",
        "type": "ui_group",
        "name": "Group configuration",
        "tab": "4d997c7f.f72024",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "902c151e.212a38",
        "type": "ui_group",
        "name": "Device list",
        "tab": "4d997c7f.f72024",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ee188496.59ff28",
        "type": "ui_group",
        "name": "Device details",
        "tab": "4d997c7f.f72024",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4d997c7f.f72024",
        "type": "ui_tab",
        "name": "Z2M Admin",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6db85f70.6d8a2",
        "type": "ui_tab",
        "name": "Z2M Network map",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "65b0b39179ae8e87",
        "type": "aedes broker",
        "z": "0beaa6996a1f29f5",
        "name": "mqtt_broker",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 110,
        "y": 40,
        "wires": [
            [],
            []
        ],
        "info": "Servidor MQTT"
    },
    {
        "id": "28ce76cc6b01957c",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "name": "devices_list",
        "func": "\nvar devices = msg.payload;\nvar deviceList = [];\nvar gangCount = 1;\n\nif (msg.payload && msg.payload.endpoints) {\n    // Obter a quantidade de chaves dentro de 'endpoints'\n    //gangCount = Object.keys(msg.payload.endpoints).length;\n}\n\n\n// Itera sobre os dispositivos e extrai as informações necessárias\nfor (var key in devices) {\n    if (devices.hasOwnProperty(key)) {\n        var device = devices[key];\n        \n        if(device.friendly_name != 'Coordinator'){\n            deviceList.push({\n                ieeeAddress: device.ieee_address,\n                friendlyName: device.friendly_name,\n                totalGangs: Object.keys(device.endpoints).length\n            });\n        }        \n    }\n}\n\nglobal.set(\"devsList\", deviceList);\n\n// Configura a mensagem para o nó debug\nmsg.payload = deviceList;\nreturn msg;\n// Guarda lista dos dispositivos na variavel global",
        "outputs": 1,
        "timeout": "0",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 220,
        "wires": [
            [
                "90e27a5e03e949c4"
            ]
        ],
        "info": "Cria lista de _**FRENDLY_NAME e IEEEADDRESS**_ dos dispositivos."
    },
    {
        "id": "53c67c8f7a5626f5",
        "type": "mqtt in",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "name": "Rx lista devs",
        "topic": "zigbee2mqtt/bridge/devices",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "28ce76cc6b01957c",
                "e2a37c97da061523"
            ]
        ],
        "info": "Subscreve no topico _**\"zigbee2mqtt/bridge/devices\"**_ para obter lista dos dispositivos."
    },
    {
        "id": "90e27a5e03e949c4",
        "type": "ui_template",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "group": "2b8b535d0f438db2",
        "name": "",
        "order": 1,
        "width": 6,
        "height": 8,
        "format": "<style>\n    :root {\n        --clr: #222327;\n        --altura_grupo: 30vh;\n        --off_set_altura_grupo: 10vh;\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n\n        /* Impede Seleccção e Copia */\n        -moz-user-select: none;\n        -khtml-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none;\n        user-select: none;      \n    }\n\n\n    /***************************** CARDS/GRIDS ***********************************************/\n    .div_img_clk {\n        padding-top: 2px;\n        margin-right: 6px;\n        display: inline-flex;\n    }\n\n    .div_historico {\n        display: inline-flex;\n        position: relative;\n        text-align: center;\n        font-size: 16px;\n    }\n\n    #tr_historico {\n        display: block;\n    }\n\n    .grid_container {\n        display: grid;\n        grid-template-rows: 50% 50%;\n        padding-top: 5px;\n        gap: 5px;\n        justify-content: center;\n        background-color: rgba(0, 0, 0, 0.8);\n    }\n\n    .grid_container>div {\n        border: 1px solid rgb(168, 168, 168);\n        text-align: center;\n        border-radius: 5x;\n    }\n\n    .card {\n        position: relative;\n        width: 290px;\n        height: 70px;\n        box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);\n        border: 1px solid rgba(140, 140, 140, .5);\n        background-color: #FFFFFF;\n        background-color: rgb(100, 100, 100);\n        color: black;\n        transition: 0.3s;\n        border-radius: 5px;\n        padding-top: 5px;\n    }\n\n    #cards_container {\n        display: block;\n        position: absolute;\n        top: 0px;\n        width: 100%;\n        height: 100%;\n        left: 50%;\n        transform: translate(-50%, 0%);\n        background-color: rgba(0, 0, 0, 0.8);\n    }\n\n\n    .div_nome {\n        text-align: left;\n        padding-left: 5px;\n        width: 195px;\n        font-weight: bold;\n        font-size: 14px;\n    }\n\n\n    .card:hover {\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n        cursor: pointer;\n    }\n\n\n    .text_container {\n        position: relative;\n        font-size: 12px;\n        width: 98%;\n    }\n\n\n    #tab_energia td {\n        padding: 0px;\n        font-size: 12px;\n    }\n\n    #tbl_hist_clk th {\n        border: none;\n    }\n\n    #svg_configurations circle {\n        fill: none;  \n        stroke: lightgray;\n    }\n\n    #svg_guardar_tmr, #svg_guardar_rnm {    \n    stroke: green;\n    }\n\n    #svg_guardar_tmr path, #svg_guardar_rnm path{\n    fill: none;\n    }\n\n\n    .div_img {\n        position: relative;\n        border-radius: 50%;\n        padding: 2px;\n        width: 35px;\n        height: 35px;\n        margin-right: 10px;\n        margin-left: 10px;        \n    }\n\n\n\n    /****************** MENU CONTEXTUAL ********************/\n    .menu_contextual {\n    display: none;         \n    /* The following line is responsible for all the magic */\n    transform: translateX(min(var(--mouse-x), calc(100vw - 100%))) translateY(min(var(--mouse-y), calc(100vh - 100%)));\n    width: auto;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    padding: 0px 5px 5px 5px;\n    border-radius: 5px;\n    background: #4e94ab;\n    align-items: left;\n    }\n    \n    \n    .menu_contextual ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    /*justify-content: center|left|...;*/\n    }\n    \n    \n    .menu_contextual li {\n    border-bottom: 1px solid #fff;\n    }\n    \n    .menu_contextual li a {\n    display: flex;\n    padding: 5px;\n    color: #000000;\n    text-decoration: none;\n    font-size: 18px;\n    }\n    \n    a>svg {\n    position: relative;\n    top: 5px;\n    }\n\n\n    /*----------------------- CONFIGURAÇÔES TIMERS --------------------------*/\n    #div_cfg_tmrs_wrapper {\n    display: none;\n    position: absolute;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    #div_cfg_tmrs {\n    display: block;\n    position: absolute;\n    width: 300px;\n    height: 370px;\n    top: 10px;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgb(100, 100, 100);\n    color: white;\n    border: 1px solid whitesmoke;\n    border-radius: 5px;\n    }\n    \n    \n    \n    #div_estado {\n    position: absolute;\n    display: inline-flex;\n    padding: 5px;\n    width: 30px;\n    height: 30px;\n    top: 10px;\n    right: 5px;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n      \n    #div_separador_cfg_top {\n    position: absolute;\n    top: 15px;\n    display: block;\n    width: 100%;\n    border: 0px solid white;\n    font-size: 20px;\n    text-align: center;\n    text-decoration: underline;\n    cursor: pointer;\n    }\n    \n    #div_tmr {\n    position: relative;\n    top: 60px;\n    display: flex;\n    height: 45px;\n    width: 95%;\n    overflow: auto;\n    margin: auto;\n    justify-content: center;   \n    }\n    \n    \n    #div_tmr>label {\n    padding: 5px 25px 5px 5px;\n    position: relative;\n    cursor: pointer;\n    width: 5px;\n    }\n    \n    .hora {\n        height: 100%;\n        text-align: center;\n    }\n    \n    \n    #hora_actual {\n        padding: 5px;\n        display: inline;\n        color: yellow;\n    }\n    \n    #div_semana {\n        display: flex;\n        position: relative;\n        top: 120px;\n        margin-bottom: 30px;\n        height: 35px;\n        width: 250px;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n    \n    #div_semana>label {\n        padding: 5px 30px 5px 5px;\n        position: relative;\n        cursor: pointer;\n        width: 5px;\n    }\n    \n    span:hover {\n        background: rgb(67, 67, 240);\n    }\n    \n    label input {\n        display: none;\n    }\n    \n    label span {\n        border: 2px solid #ccc;\n        width: 25px;\n        height: 25px;\n        position: absolute;\n        overflow: hidden;\n        line-height: 1.4;\n        text-align: center;\n        border-radius: 100%;\n        font-size: 12pt;\n        color: white;\n    }\n    \n    input:checked+span {\n        background: rgb(7, 7, 7);\n        border-color: rgb(190, 209, 16);\n    }\n    \n    #chk_activar {\n        top: 0;\n        left: 0;\n        height: 25px;\n        width: 25px;\n        background-color: #eee;\n    }\n    \n    \n    .cfg_timers {\n        position: relative;\n        bottom: 10px;\n        display: flex;\n        width: 35px;\n        height: 35px;\n        margin-left: 1px;\n        cursor: pointer;\n        margin-right: 2px;\n    }\n    \n    #div_past_timer{\n        margin-left: 10px;\n    }\n    \n    #div_copy_timer{\n        margin-right: 10px;\n    }\n    \n    #div_share_timer{\n        margin-right: 10px;\n    }\n       \n    \n    #div_wrapper_save_tmrs {\n        position: relative;\n        margin-top: 105px;\n        display: inline-flex;\n        justify-content: center;\n        width: 100%;\n    }\n    \n    /********************************** TABELA ******************************************/\n    #td_hora_actual {\n    text-align: center;\n    }\n    \n    #tbl_cmd>td,\n    th {\n    border: 1px solid gray;\n    text-align: left;\n    padding: 1px;\n    }\n    \n    .esquerda {\n    text-align: left;\n    }\n    \n    #tbl_cmd {\n    position: relative;\n    top: 35%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    }\n\n\n    /*----------------------- CONFIGURAÇÔES-RENOMEAR --------------------------*/\n    #div_wrapper_set_name {\n    display: none;\n    position: absolute;\n    top: 0px;\n    width: 100%;\n    height: 100vh;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    #div_set_name{\n    display: block;\n    position: relative;\n    width: 95%;\n    height: 75px;\n    padding: 0px;\n    top: 5px;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgb(100, 100, 100);\n    color: white;\n    }\n\n    .wrapper_guardar_sair{\n    display: inline-flex;\n    position: relative;\n    width: 40%;\n    height: 35px;\n    justify-content: center;  \n    cursor: pointer; \n    }\n    \n    #div_sair {\n    position: relative;  \n    bottom: 6px;  \n    display: flex;\n    width: 30px;\n    height: 30px;\n    margin-left:0px;\n    margin-right:2px;\n    cursor: pointer;\n    }\n    \n    #div_guardar {\n    position: relative;\n    bottom: 6px;  \n    display: flex;\n    width: 30px;\n    height: 30px;\n    margin-right: 2px;\n    cursor: pointer;\n    }\n    \n    \n    #div_buttons_set_name {\n    position: relative;\n    margin-top: 20px;\n    display: inline-flex;\n    justify-content: center;\n    width: 100%;\n    }\n    \n    #txt_nome {\n    position: relative;\n    width: 100%;\n    padding-right: 8px;\n    font-size: 16px;\n    text-align: center;\n    text-decoration: none;\n    } \n\n\n    .back_btn{\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 0px;\n        width: 35px;\n        height: 35px;\n        cursor: pointer;\n        background-color: rgb(20, 20, 20);\n        border-radius: 50%;\n    }\n       \n</style>\n\n<!-- DIV que contem os Dispositivos -->\n<div id=\"cards_container\"></div>\n\n\n<!-- div_cfg_tmrs_wrapper -->\n<div id=\"div_cfg_tmrs_wrapper\">\n    <!-- div_cfg_tmrs -->\n    <div id=\"div_cfg_tmrs\">\n        <div id=\"div_separador_cfg_top\" ondblclick=\"\">\n            <div id=\"div_tmr_dev_name\"><b>TEMPORIZADORES</b></div>\n        </div>\n        <div id=\"div_estado\" ondblclick=\"\"></div>\n        <div id=\"div_tmr\">\n\n            <label id=\"lbl1\"><input type=\"radio\" value=\"1\" name=\"select_timer\" /><span>1</span>\n                <p></p>\n            </label>\n            <label id=\"lbl2\"><input type=\"radio\" value=\"2\" name=\"select_timer\" /><span>2</span>\n                <p></p>\n            </label>\n            <label id=\"lbl3\"><input type=\"radio\" value=\"3\" name=\"select_timer\" /><span>3</span>\n                <p></p>\n            </label>\n            <label id=\"lbl4\"><input type=\"radio\" value=\"4\" name=\"select_timer\" /><span>4</span>\n                <p></p>\n            </label>\n            <label id=\"lbl5\"><input type=\"radio\" value=\"5\" name=\"select_timer\" /><span>5</span>\n                <p></p>\n            </label>\n            <label id=\"lbl6\"><input type=\"radio\" value=\"6\" name=\"select_timer\" /><span>6</span>\n                <p></p>\n            </label>\n            <label id=\"lbl7\"><input type=\"radio\" value=\"7\" name=\"select_timer\" /><span>7</span>\n                <p></p>\n            </label>\n            <label id=\"lbl8\"><input type=\"radio\" value=\"8\" name=\"select_timer\" /><span>8</span>\n                <p></p>\n            </label>\n            <!--<label id=\"lbl9\"><input type=\"radio\" value=\"9\" name=\"select_timer\" /><span>9</span>\n                <p></p>\n            </label>\n            <label id=\"lbl10\"><input type=\"radio\" value=\"10\" name=\"select_timer\" /><span>10</span>\n                <p></p>\n            </label>\n            <label id=\"lbl11\"><input type=\"radio\" value=\"11\" name=\"select_timer\" /><span>11</span>\n                <p></p>\n            </label>\n            <label id=\"lbl12\"><input type=\"radio\" value=\"12\" name=\"select_timer\" /><span>12</span>\n                <p></p>\n            </label>\n            <label id=\"lbl13\"><input type=\"radio\" value=\"13\" name=\"select_timer\" /><span>13</span>\n                <p></p>\n            </label>\n            <label id=\"lbl14\"><input type=\"radio\" value=\"14\" name=\"select_timer\" /><span>14</span>\n                <p></p>\n            </label>\n            <label id=\"lbl15\"><input type=\"radio\" value=\"15\" name=\"select_timer\" /><span>15</span>\n                <p></p>\n            </label>\n            <label id=\"lbl16\"><input type=\"radio\" value=\"16\" name=\"select_timer\" /><span>16</span>\n                <p></p>\n            </label>-->\n\n        </div>\n\n\n        <table id=\"tbl_cmd\">\n            <tr>\n                <td>\n                    <label id=\"lbl_activar\" for=\"activar\">Activado:</label>\n                </td>\n                <td class=\"esquerda\">\n                    <input type=\"checkbox\" id=\"chk_activar\" name=\"activar\" />\n                </td>\n            </tr>\n            <!--<tr>\n               <td>\n                    <label for=\"select_out\">Saída:</label>\n                </td>\n                <td class=\"esquerda\">\n                    <select id=\"select_saida\" name=\"select_out\">\n                        <option value=\"opt_1\">1</option>\n                    </select>\n                </td>\n            </tr>-->\n            <tr>\n                <td>\n                    <label for=\"select_action\">Acção: </label>\n                </td>\n                <td class=\"esquerda\">\n                    <select id=\"select_accao\" name=\"select_action\">\n                        <option value=\"opt_off\">Desligar</option>\n                        <option value=\"opt_on\">Ligar</option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label class=\"hora\" for=\"appt-time\">Hora: </label>\n                </td>\n                <td class=\"esquerda\">\n                    <input class=\"hora\" id=\"time_hora\" type=\"time\" name=\"appt-time\" value=\"--:-- --\">\n                </td>\n            </tr>\n            <tfoot>\n                <tr>\n                    <td id=\"td_hora_actual\" colspan=\"2\">\n                        <div id=\"hora_actual\">Hora</div>\n                    </td>\n                </tr>\n            </tfoot>\n        </table>\n\n\n        <div id=\"div_semana\">\n            <label><input id=\"0\" type=\"checkbox\" name=\"sel_week_day\" /><span>D</span>\n                <p></p>\n            </label>\n            <label><input id=\"1\" type=\"checkbox\" name=\"sel_week_day\" /><span>S</span>\n                <p></p>\n            </label>\n            <label><input id=\"2\" type=\"checkbox\" name=\"sel_week_day\" /><span>T</span>\n                <p></p>\n            </label>\n            <label><input id=\"3\" type=\"checkbox\" name=\"sel_week_day\" /><span>Q</span>\n                <p></p>\n            </label>\n            <label><input id=\"4\" type=\"checkbox\" name=\"sel_week_day\" /><span>Q</span>\n                <p></p>\n            </label>\n            <label><input id=\"5\" type=\"checkbox\" name=\"sel_week_day\" /><span>S</span>\n                <p></p>\n            </label>\n            <label><input id=\"6\" type=\"checkbox\" name=\"sel_week_day\" /><span>S</span>\n                <p></p>\n            </label>\n\n        </div>\n\n        <!-- div_wrapper_save_tmrs -->\n        <div id=\"div_wrapper_save_tmrs\">\n            <div id=\"div_guardar_tmrs\" class=\"wrapper_guardar_sair\">\n            <div id=\"\" class=\"cfg_timers back_btn\" onclick=\"\">\n                <svg id=\"svg_guardar_tmr\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#39be5a\" stroke-width=\"2\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\n                    <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\n                    <polyline points=\"7 3 7 8 15 8\"></polyline>\n                </svg>\n            </div>\n            <text x=\"0\" y=\"0\" font-family=\"Arial\" font-size=\"24\" fill=\"black\">Guardar</text>\n            </div>\n\n            <div id=\"div_sair_tmrs\" class=\"wrapper_guardar_sair\">\n            <div id=\"\" class=\"cfg_timers back_btn\" onclick=\"\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#f80a0a\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\">\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                </svg>\n            </div>\n            <text x=\"0\" y=\"0\" font-family=\"Arial\" font-size=\"24\" fill=\"black\">Fechar</text>\n            </div>\n\n        </div> <!-- div_wrapper_save_tmrs -->\n\n    </div> <!-- div_cfg_tmrs -->\n</div> <!-- div_cfg_tmrs_wrapper -->\n\n\n<!-- div_wrapper_set_name -->\n<div id=\"div_wrapper_set_name\">\n    <!-- div_set_name -->\n    <div id=\"div_set_name\">\n        <!-- maxlength=\"22\" < MAX_NAME_LENGTH -->\n        <input type=\"text\" id=\"txt_nome\" maxlength=\"30\" placeholder=\"Digite aqui o novo nome.\" autocomplete=\"off\" onkeypress=\"\" onkeyup=\"\" />\n\n        <!-- div_buttons_set_name -->\n        <div id=\"div_buttons_set_name\">\n            <div id=\"div_wrapper_guardar\" class=\"wrapper_guardar_sair\">\n                <div id=\"div_guardar\" class=\"back_btn\">                \n                    <svg id=\"svg_guardar_rnm\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"2\"\n                        stroke-linecap=\"round\" stroke-linejoin=\"round\">                    \n                        <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\n                        <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\n                        <polyline points=\"7 3 7 8 15 8\"></polyline>                    \n                    </svg>\n                </div>\n                <text x=\"0\" y=\"0\" font-family=\"Arial\" font-size=\"24\" fill=\"black\">Guardar</text>          \n            </div>\n\n            <div id=\"div_wrapper_sair\" class=\"wrapper_guardar_sair\">\n                <div id=\"div_sair\" class=\"back_btn\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#f80a0a\"\n                        stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                    </svg>                   \n                </div>\n                <text x=\"0\" y=\"0\" font-family=\"Arial\" font-size=\"24\" fill=\"black\">Fechar</text>\n            </div>\n\n        </div> <!-- div_buttons_set_name -->\n    </div><!-- div_set_name -->\n</div><!-- div_wrapper_set_name -->\n\n\n<script>\n    (function(scope) {  \n        ///////////////////////\n        // Variaveis Globaal //\n        ///////////////////////\n        var ieeeaddress = null;\n        var timer_index = null; \n        let arrays_tmrs = {};\n        let total_gangs = 1;\n        const gangs = ['L', 'R', 'C'];\n\n        //////////////////////\n        // Documento pronto //\n        //////////////////////\n        $(document).ready(function () {\n            // Tratar Click Direito na pagina\n            window.addEventListener('contextmenu', event => {\n            // Nao exibir o menu contexto do click direito\n                event.preventDefault();\n            });\n\n            // Limpar select option da Acção\n            document.getElementById('select_accao').selectedIndex = -1;\n            \n        });\n\n        \n        //////////////////////////////////////////////////////\n        // Inicializa processo para obtencao da Hora actual //\n        //////////////////////////////////////////////////////\n        setInterval(obter_data_hora, 1000);\n\n        \n\n        ///////////////////////////////////////////////////////\n        // Exibir Data/Hora no Dlg de configurações de Timer //\n        ///////////////////////////////////////////////////////\n        function obter_data_hora() {\n            //var strcount\n            const weekday = [\"Domingo\",\"Segunda-feira\",\"Terça-feira\",\"Quarta-feira\",\"Quinta-feira\",\"Sexta-feira\",\"Sabado\"];\n            var currentdate = new Date();\n            var formato = `<font color=\"white\" face=\"Verdana, Geneva, sans-serif\" size=\"+1\">${weekday[currentdate.getDay()]}</font>`;\n            formato += '<font color=\"yellow\" face=\"Verdana, Geneva, sans-serif\" size=\"+1\">';           \n            \n            var hours = currentdate.getHours();\n            var minutes = currentdate.getMinutes();\n            var seconds = currentdate.getSeconds();\n            \n            if (hours < 10) hours=\"0\" + hours; \n            if (minutes < 10) minutes=\"0\" + minutes; \n            if (seconds < 10) seconds=\"0\" + seconds; \n                \n            formato +=\" \" + hours + \":\" + minutes + \":\" + seconds; formato +=\"</font>\";\n            document.getElementById(\"hora_actual\").innerHTML = formato; \n\n        } // Fim de obter_data_hora()\n\n\n       \n        ////////////////////////////////////////\n        // Solicita o estado dos dispositivos //\n        ////////////////////////////////////////\n        var mensagem = {\n            getdevstate:\"\"\n        };     \n           \n        scope.send({ payload: JSON.stringify(mensagem) });// Enviar os dados ao fluxo/flow\n              \n\n\n        ////////////////////////\n        // Classe Dispositivo //\n        ////////////////////////\n        class Dispositivo {        \n            constructor(id, nome, img) {\n                this.Id = id;\n                this.Nome = nome;\n                this.Img = img;\n            }  \n        }\n\n\n        /////////////////\n        // Imagens SVG //\n        /////////////////    \n        const svg_clock = '<svg class=\"svg_clk\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline></svg>';\n        const img_lampada = '<svg id=\"svg_lamp\" viewBox=\"-80 0 512 512\"><path d=\"M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z\" /></svg>';\n        \n        let cards_container = document.getElementById('cards_container');\n        const historico = '00:00:00, 00/00/0000';\n\n        scope.$watch('msg', function(msg) { \n\n            if (Array.isArray(msg.payload) && msg.topic == 'zigbee2mqtt/bridge/devices') { // Se for array \n                msg = msg.payload;\n                guarda_dispositivos = msg.payload;\n\n                for(let cont = 0; cont < msg.length; cont++){\n                    // Cria os dispositivos\n                    const objdev = new Dispositivo(msg[cont].ieeeAddress, msg[cont].friendlyName, img_lampada);\n                    // Criar card, se nao existe na DOM\n                    if (document.getElementById(msg[cont].ieeeAddress + 'devCardWrapper')){\n                        continue;\n                    } else {\n                        criar_device(objdev);\n                    } \n                }\n                \n                /*let devid = null;\n\n                for(let cont = 0; cont < msg.length; cont++){\n\n                    for(var i = 0; i < msg[cont].totalGangs; i++){\n                        // Cria os dispositivos                       \n                        if(msg[cont].totalGangs == 1){\n                            devid =  msg[cont].ieeeAddress;\n                        }\n                        else{\n                            devid = msg[cont].ieeeAddress + gangs[i];\n                        }\n                        const objdev = new Dispositivo(devid, msg[cont].friendlyName, img_lampada);\n                        // Criar card, se nao existe na DOM\n                        if (document.getElementById(devid + 'devCardWrapper')){\n                            continue;\n                        } else {\n                            criar_device(objdev);\n                        }\n                    }\n                }*/                               \n            } \n            else if (msg.topic == 'DEVICES_STATE' && typeof msg.payload === 'object' && msg.payload !== null && !Array.isArray(msg.payload)){  \n                \n                msg = msg.payload;\n\n                // Actualiza o nome do Dispositivo\n                document.getElementById(msg.Id + 'devName').innerHTML = msg.Nome;\n                \n                // Seleciona o elemento pelo ID\n                const elemento = document.getElementById(msg.Id + 'devImage');\n\n                // Alterar cor da lampada\n                if(msg.Estado == \"ON\"){\n                    alterar_cor_lamp(msg.Id + 'devImage', '#FFEA20');\n                    // Define o novo valor para a propriedade box-shadow\n                    elemento.style.boxShadow = \"2px 2px 12px 1px rgba(255, 234, 32, .5)\";\n                }\n                else  if(msg.Estado == \"OFF\"){\n                    alterar_cor_lamp(msg.Id  + 'devImage', 'lightgray');  \n                    // Define o novo valor para a propriedade box-shadow\n                    elemento.style.boxShadow = \"2px 2px 12px 1px rgba(140, 140, 140, .5)\";\n                }          \n            }\n            else if (msg.topic == 'GET_DEV_TIMER'){                \n\n                // Obter, do objecto JSON, os elementos do Timer\n                var timerobj = JSON.parse(msg.payload);\n\n                if( msg.payload == null){\n                    // Limpar elementos\n                    resetElementosTimers();\n                    \n                    // Marca o elemento, radio selecionar timee, marcado\n                    var radList = document.getElementsByName('select_timer');\n                    for (var i = 0; i < radList.length; i++) { \n                        if( (timer_index - 1) == i) radList[i].checked = true; \n                    }\n\n                    // Restituir estado do botão \"Guardar\"\n                    document.getElementById(\"div_guardar_tmrs\").disabled = false;\n                    document.getElementById(\"div_guardar_tmrs\").querySelector('svg').style.stroke = \"#39be5a\";\n                    \n                    return;\n                }\n\n                // Estado do CheckBox Activar\n                if(timerobj.Activo == true){\n                    document.getElementById(\"chk_activar\").checked = true;\n                }\n                else if(timerobj.Activo == false){\n                    document.getElementById('chk_activar').checked = false;\n                }\n\n                // Opcao do select Accao\n                // (*J*) Se existir mais de 2 duas acções a lógica deve mudar\n                if(timerobj.Accao == 'ON'){\n                    document.getElementById('select_accao').selectedIndex = 1;\n                }\n                else if(timerobj.Accao == 'OFF'){\n                     document.getElementById('select_accao').selectedIndex = 0;    \n                }\n    \n               \n                // Separa os elementos da expressao do cron\n                const partes = timerobj.HoraWeekDays.split(' '); \n                const segundos = partes[0];             \n                const minutos = partes[1];\n                const horas = partes[2];\n                //const diames = partes[3];\n                //const mes = partes[4];\n                const diasdasemana = partes[5];\n\n                // Exibir Hora do Timer\n                document.getElementById('time_hora').value = `${horas}:${minutos}`;\n                \n                // Marcar os dias da semana do Timer \n                let arraydiassemana = diasdasemana.split(',');                \n                var checBtn = document.getElementsByName(\"sel_week_day\");\n                for (let i = 0; i < arraydiassemana.length; i++) {\n                    var index = arraydiassemana[i];\n                    checBtn[index].checked = true;                   \n                }               \n            }\n            else if (msg.topic == 'GET_ALL_TIMERS'){\n                // Obter, do objecto JSON, os elementos dos Timers\n                //var timersobj = JSON.parse(msg.payload);\n                let timersarray = msg.payload;\n                \n                // Guarda os Timers nos arrays dos Devices correspondentes\n                for(let cont = 0; cont < timersarray.length ;cont++){\n                    let Nome = timersarray[cont].name;  \n                    let Id = Nome.replace(/-.*/, \"\");\n                    let Payload = timersarray[cont].payload; \n                    let Expressao = timersarray[cont].expression; \n                    let IsRunning = timersarray[cont].isrunning;\n                       \n                    arrays_tmrs[Id].push(Expressao);                 \n                }\n\n               \n\n                for(let cont = 0; cont < timersarray.length ;cont++){    \n                    let Nome = timersarray[cont].name;  \n                    let Id = Nome.replace(/-.*/, \"\");\n\n                    //console.log(arrays_tmrs[Id]);\n\n                    // Encontrar o próximo evento\n                    /*let proximoEvento = null;\n\n                    let crons = arrays_tmrs[Id];\n\n                    crons.forEach(cron => {\n                        const proximo = cronToNextDate(cron);\n                        if (!proximoEvento || proximo < proximoEvento) {\n                            proximoEvento = proximo;\n                        }\n                    });\n                   \n                    console.log(proximoEvento); */                \n                }\n            }\n                       \n        });// FIM de scope.$watch('msg.payload', function(msg) \n\n\n\n        function cronToNextDate(cronExpr) {\n            const [sec, min, hour, dayOfMonth, month, dayOfWeek] = cronExpr.split(' ');\n\n            const now = new Date();\n            let nextEvent = new Date(now);\n\n            // Definir o mês (0-11 em JavaScript) e o dia do mês (1-31)\n            let monthNum = (month === '*') ? now.getMonth() : Number(month) - 1;\n            let dayNum = (dayOfMonth === '*') ? now.getDate() : Number(dayOfMonth);\n\n            // Verificar se os dias da semana foram definidos\n            const daysOfWeek = dayOfWeek.split(',').map(Number).filter(d => !isNaN(d));\n\n            // Encontrar o próximo dia da semana correspondente\n            const currentDay = now.getDay(); // 0 = Domingo, 1 = Segunda, ..., 6 = Sábado\n            let nextDayOffset = 0;\n            if (daysOfWeek.length > 0) {\n                // Encontre o próximo dia da semana a partir do atual\n                const nextDay = daysOfWeek.find(day => day >= currentDay) || daysOfWeek[0] + 7;\n                nextDayOffset = (nextDay >= currentDay) ? nextDay - currentDay : 7 - (currentDay - nextDay);\n            }\n\n            // Configurar a data do próximo evento\n            nextEvent.setDate(now.getDate() + nextDayOffset);\n            nextEvent.setMonth(monthNum);\n            nextEvent.setDate(dayNum); // Ajustar o dia do mês, caso não seja '*'\n            \n            // Configurar horas, minutos e segundos\n            nextEvent.setHours(Number(hour));\n            nextEvent.setMinutes(Number(min));\n            nextEvent.setSeconds(Number(sec));\n\n            // Se o próximo evento for no passado, mover para o próximo mês/semana\n            if (nextEvent <= now) {\n                nextEvent.setDate(nextEvent.getDate() + 7); // Mover uma semana para frente\n            }\n\n            return cronExpr;//nextEvent;\n        }\n            \n    \n        \n        ///////////////////////////////////\n        // Funcao para cria dispositivos //\n        ///////////////////////////////////\n        function criar_device(device){  \n\n            if (device instanceof Dispositivo) {\n                \n                const envoltura_card = `                    \n                    <div id=${device.Id + 'contextMenu'} class=\"menu_contextual\">\n                        <ul>\n                            <li id=\"li_rnm\"><a id=${device.Id + 'renameDev'}  href=\"#\"><svg width=\"24\" height=\"24\"\n                                        viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                        stroke-linejoin=\"round\">\n                                        <polygon points=\"14 2 18 6 7 17 3 17 3 13 14 2\"></polygon>\n                                        <line x1=\"3\" y1=\"22\" x2=\"21\" y2=\"22\"></line>\n                                    </svg> Renomear</a></li>\n                            <li id=\"li_tmr\"><a id=${device.Id + 'devTimer'} href=\"#\"><svg width=\"24\" height=\"24\"\n                                        viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                        stroke-linejoin=\"round\">\n                                        <circle cx=\"12\" cy=\"12\" r=\"7\"></circle>\n                                        <polyline points=\"12 9 12 12 13.5 13.5\"></polyline>\n                                        <path\n                                            d=\"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83\">\n                                        </path>\n                                    </svg> Temporizadores</a></li>\n                            <li id=\"li_cfg\"><a id=\"a_cfg\" href=\"#\"><svg width=\"24\" height=\"24\"\n                                        viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"2\" stroke-linecap=\"round\"\n                                        stroke-linejoin=\"round\">\n                                        <line x1=\"4\" y1=\"21\" x2=\"4\" y2=\"14\"></line>\n                                        <line x1=\"4\" y1=\"10\" x2=\"4\" y2=\"3\"></line>\n                                        <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"12\"></line>\n                                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"3\"></line>\n                                        <line x1=\"20\" y1=\"21\" x2=\"20\" y2=\"16\"></line>\n                                        <line x1=\"20\" y1=\"12\" x2=\"20\" y2=\"3\"></line>\n                                        <line x1=\"1\" y1=\"14\" x2=\"7\" y2=\"14\"></line>\n                                        <line x1=\"9\" y1=\"8\" x2=\"15\" y2=\"8\"></line>\n                                        <line x1=\"17\" y1=\"16\" x2=\"23\" y2=\"16\"></line>\n                                    </svg> Cofigurações</a></li>\n                        </ul>\n                    </div>\n\n                    \n                    <div id=${device.Id + 'devCard'} class=\"card\" style=\"display: block;\">                       \n                    <div class=\"text_container\">\n                        <table id=\"tbl_hist_clk\">\n                            <tr>\n                                <th rowspan=\"3\">\n                                    <div class=\"div_img\" id=${device.Id + 'devImage'} >${device.Img}</div>\n                                </th>\n                            </tr>\n                \n                            <tr>\n                                <td>\n                                    <div class=\"div_nome\" id=${device.Id + 'devName'}>${device.Nome}</div>\n                                </td>\n                                <td>\n                                    <div id=${device.Id + 'devConfig'} class=\"div_cfg\" roll=\"configurar\">\n                                        <svg id=\"svg_configurations\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\"\n                                            stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                            <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n                                            <circle cx=\"12\" cy=\"5\" r=\"1\"></circle>\n                                            <circle cx=\"12\" cy=\"19\" r=\"1\"></circle>\n                                        </svg>\n                                    </div>\n                                </td>\n                            </tr>\n                \n                            <tr id=\"tr_historico\">\n                                <td>\n                                    <div class=\"div_img_clk\" id=\"\" onclick=\"\">${svg_clock}</div>\n                                </td>\n                                <td>\n                                    <div class=\"div_historico\" id=\"div_historico\">${historico}</div>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>`;\n\n\n                ////////////////////////////////                                \n                // Cria DIV envoltura da Card //\n                ////////////////////////////////\n                var div = document.createElement(\"div\");\n                div.innerHTML = envoltura_card;\n                div.id = device.Id + 'devCardWrapper';\n                div.classList.add(\"grid_container\");              \n                cards_container.appendChild(div);\n                //console.log(device.Id);\n                var menu_contexto = document.getElementById(device.Id + 'contextMenu');\n\n\n                /////////////////////////////////////////////////////////////\n                // Cria um Array vazio para os Timeres de cada Dispositivo //\n                /////////////////////////////////////////////////////////////\n                arrays_tmrs[device.Id] = [];\n\n\n\n                ////////////////////////////////////////////////////////////\n                // Evento Click no elemento <a> para renomear dispositivo //\n                ////////////////////////////////////////////////////////////\n                document.getElementById(device.Id + 'renameDev').addEventListener('click', function(event){                  \n\n                    // Alterar propriedades da Card\n                    const rnm_dev = document.getElementById(device.Id + 'devName');\n                    const div_card = document.getElementById(device.Id + 'devCard');\n                    var guarda_html = div_card.innerHTML;\n                    var guardar_altura = div_card.style.height;\n                    div_card.style.height = '110px';\n                    div_card.innerHTML = `<div style=\"color:yellow;\"><u>${rnm_dev.innerHTML}</u></div>`;\n                    div_card.innerHTML += document.getElementById('div_wrapper_set_name').innerHTML;\n\n                    // Evento Click na div Renomear dispositivo\n                    document.getElementById('div_wrapper_guardar').addEventListener('click', function(){\n                        const novo_nome = document.getElementById('txt_nome').value;\n                        \n                        // Validar o novo nome\n                        if(novo_nome == null || novo_nome == '' | novo_nome.lenght <= 0) return;\n                        \n                        // Dados a serem enviados para o fluxo/flow\n                        var mensagem = {\n                            topico:'zigbee2mqtt/bridge/request/device/rename',\n                            carga:`{\"from\":\"${rnm_dev.innerHTML}\", \"to\": \"${novo_nome}\"}`\n                        };\n                        // Enviar os dados ao fluxo/flow\n                        scope.send({ payload: JSON.stringify(mensagem) });\n                    });\n\n\n                    // Evento Click na div Fechar do dialog renomear dispositivo\n                    document.getElementById('div_wrapper_sair').addEventListener('click', function(){\n                        div_card.innerHTML = guarda_html;\n                        div_card.style.height = guardar_altura;\n                        \n                        // Adicionar Evento contexmenu ns div cfg\n                        add_contextmenu_event();\n                    });\n                   \n                });\n\n\n\n                \n                ///////////////////////////////////////////////////////\n                // Exibir Diago para configurar timer do dispositivo //\n                ///////////////////////////////////////////////////////\n                document.getElementById(device.Id + 'devTimer').addEventListener('click', function(event){\n                    // Ocultar Cards\n                    document.getElementById('cards_container').style.display = 'none';\n\n                    // Exibir Dialogo Configuracoes de Timers\n                    var cfg_tmr = document.getElementById('div_cfg_tmrs_wrapper');\n                    cfg_tmr.style.position = 'absolute';\n                    cfg_tmr.style.zIndex = 999;\n                    cfg_tmr.style.display = 'block';    \n\n                    // Atribuir o Nome e imagem, do dispositivo correspondente, ao dialogo Timers\n                    const nome_dev = document.getElementById(ieeeaddress + 'devName').innerHTML;\n                    document.getElementById('div_tmr_dev_name').innerHTML = `<b>${nome_dev}</b>`;\n                    document.getElementById('div_estado').innerHTML = document.getElementById(ieeeaddress + 'devImage').innerHTML;\n                });\n\n                \n                \n                ////////////////////////////////////////////////////\n                // Fechar Menu contexto, ao clicar sobre a pagina //\n                ////////////////////////////////////////////////////\n                window.addEventListener('click', function(event){\n                    menu_contexto.style.display = 'none';\n                    menu_contexto.style.zIndex = -999;\n                });               \n\n\n                //////////////////////////////////////////////////////////////////////////////\n                // Funcao auxiliar para adicionar evento click direito/longpress na div cfg //\n                //////////////////////////////////////////////////////////////////////////////\n                function add_contextmenu_event(){\n                    // Evento Listner click direito (long press) na div para configuracoes\n                    var div_cfg = document.getElementById(device.Id + 'devConfig');\n                    div_cfg.addEventListener(\"contextmenu\", function(event) {\n                        // Guarda a base do ID dos dispositivos\n                        ieeeaddress = device.Id;\n                        // Evita que o menu de contexto padrão do navegador seja exibido\n                        event.preventDefault();\n                        menu_contexto.style.position = 'absolute';\n                        menu_contexto.style.zIndex = 999;\n                        menu_contexto.style.display = 'block';\n                    });\n                }\n\n\n                // Adicionar Evento contexmenu ns div cfg\n                add_contextmenu_event();\n               \n                /////////////////////////////////////////////////////////\n                // Adiciona o event listener de clique a div da imagem //\n                /////////////////////////////////////////////////////////\n                var divimg = document.getElementById(device.Id + 'devImage');\n                    divimg.addEventListener(\"click\", function() {\n                    // Dados a serem enviados para o fluxo/flow\n                    var mensagem = {\n                        id:device.Id,\n                        state:\"TOGGLE\"\n                    };\n                    // Enviar os dados ao fluxo/flow\n                    //console.log(mensagem);\n                    scope.send({ payload: JSON.stringify(mensagem) });\n                });\n               \n                // Altera cor da imagem svg\n                alterar_cor_lamp(device.Id + 'devImage', 'lightgray');  \n                \n            }// FIM do if (device instanceof Dispositivo)\n\n            scope.send({ payload: JSON.stringify(mensagem) });// Enviar os dados ao fluxo/flow\n\n        }// FIM de function criar_device(device)\n\n\n        \n\n\n        //////////////////////////////////////////////////////////////////////////////\n        // Evento Click no botao fechar dialogo para configurar timer do dispositivo //\n        //////////////////////////////////////////////////////////////////////////////\n        document.getElementById('div_sair_tmrs').addEventListener('click', function(event){\n            // Exibir Cards\n            document.getElementById('cards_container').style.display = 'block';\n            \n            // Exibir Dialogo Configuracoes de Timers\n            var cfg_tmr = document.getElementById('div_cfg_tmrs_wrapper');\n            cfg_tmr.style.zIndex = -998;\n            cfg_tmr.style.display = 'none';\n\n            // Limpar elementos\n            resetElementosTimers();\n        });\n\n\n\n        ///////////////////////////////////////////////////////////////\n        // Atribui \"Eventlistaner\" aos radios buttons \"select_timer\" //\n        ///////////////////////////////////////////////////////////////  \n        const radios = document.querySelectorAll('input[name=\"select_timer\"]');\n        for (const radio of radios) {\n            radio.onclick = (e) => {\n                // Restituir estado do botão \"Guardar\"\n                document.getElementById(\"div_guardar_tmrs\").disabled = false;\n                document.getElementById(\"div_guardar_tmrs\").querySelector('svg').style.stroke = \"#39be5a\";\n\n                timer_index = e.target.value;\n\n                var mensagem = {\n                    cmdtimer:'GET_TIMER',\n                    command: \"status\",\n                    name: `${ieeeaddress}-${timer_index - 1}`\n                };\n\n                // Enviar os dados ao fluxo/flow\n                scope.send({ payload: JSON.stringify(mensagem)});\n                \n                // Checar estado do Timer (Activado/Desactivado)\n                const chk_activar = document.getElementById(\"chk_activar\");\n                if(chk_activar.checked == true){\n                    //document.getElementById(\"lbl_activar\").style.color = 'green';\n                }\n                else if(chk_activar.checked == false){\n                    //document.getElementById(\"lbl_activar\").style.color = 'red';\n                }\n            }\n        }\n\n\n        //////////////////////////////////////\n        // Evento Click no CheckBox Activar //\n        //////////////////////////////////////\n        const chk_activar = document.getElementById(\"chk_activar\");\n        chk_activar.addEventListener('click', function(event){            \n            if(chk_activar.checked == true){\n                //document.getElementById(\"lbl_activar\").style.color = 'green';\n            }\n            else if(chk_activar.checked == false){\n                //document.getElementById(\"lbl_activar\").style.color = 'red';\n            }            \n        });\n\n\n\n        \n\n        ////////////////////////////////////////////////////////////////////////////////\n        // Evento Click no botao para guardar configuracoes dos timers do dispositivo //\n        ////////////////////////////////////////////////////////////////////////////////\n        document.getElementById('div_guardar_tmrs').addEventListener('click', function(event){\n           \n            let txt_nome = \"\";\n            let chk_activar = \"\";           \n            //let saida = \"\";\n            let accao = \"\";\n            let hora_minutos = \"\";\n            let dias_semana = \"\";\n            \n            document.getElementById(\"chk_activar\").checked ? chk_activar = 1 : chk_activar = 0;\n            var timer = document.querySelector('input[name=select_timer]:checked');\n            //let sel_saida = document.getElementById(\"select_saida\");\n            let sel_accao = document.getElementById(\"select_accao\");\n            //saida = sel_saida.options[sel_saida.selectedIndex].text;\n            sel_accao.options[sel_accao.selectedIndex].text == \"Ligar\" ? accao = \"ON\" : accao = \"OFF\";\n            hora_minutos = document.getElementById(\"time_hora\").value;\n            dias_semana = obtemDiaSemana();\n            \n            let TimerX = timer.value - 1;\n\n            // Separa hora e minutos\n            let partes = hora_minutos.split(\":\");\n            let hora = partes[0]; \n            let minutos = partes[1]; \n\n            // Conformar dias da semana           \n            let dias = [];\n            \n            for (let i = 0; i < dias_semana.length; i++) { \n                if (dias_semana[i]===\"1\" ) { \n                    dias.push(i); \n                } \n            } \n\n            // cron => * * * * * * => seg min hor dia-do-mes (1-31) mes (1-12) dia-da-semana (0-6)\n                       \n            var mensagem = {\n                cmdtimer:'CONFIG_TIMER',\n                command: \"add\",\n                name:`${ieeeaddress}-${TimerX}`,\n                topic:`zigbee2mqtt/${ieeeaddress}/set`,\n                expression:`0 ${minutos} ${hora} * * ${dias.join(\",\")}`,\n                payload:`{\"state\":\"${accao}\"}`,\n                payloadType:\"default\",\n                persistDynamic: true\n            };\n\n            // Enviar os dados ao fluxo/flow\n            scope.send({ payload: JSON.stringify(mensagem)});\n\n\n            // Envia o estado do Timer\n            var timer_state = null;\n            (chk_activar == 1) ? timer_state = \"resume\" : timer_state = \"pause\";\n            var mensaje = {\n                cmdtimer:'TIMER_STATE',\n                command: timer_state,               \n                name:`${ieeeaddress}-${TimerX}`\n            };\n\n            // Enviar os dados ao fluxo/flow\n            scope.send({ payload: JSON.stringify(mensaje)});            \n\n            // Limpar elementos\n            resetElementosTimers();\n        });\n           \n\n        /////////////////////////\n        // Alterar cor lampada //\n        /////////////////////////\n        function alterar_cor_lamp(Id, Cor){  \n            // Alterar propriedade 'fill' do svg com id = svg_lamp  dentro da div con id = Id          \n            $(`#${Id}  #svg_lamp path`).css(\"fill\", Cor); \n        }\n\n\n        //////////////////////////\n        // Obter dias de semana //\n        //////////////////////////\n        function obtemDiaSemana() {\n            let weekDays = \"\";\n            var checBtn = document.getElementsByName(\"sel_week_day\");\n            for (let i = 0; i < checBtn.length; i++) { \n                checBtn[i].checked ? weekDays +=\"1\" : weekDays +=\"0\" ; \n            }\n            \n            return weekDays; \n        }\n\n\n        /////////////////////////////////////////////////////////////    \n        // Reset elementos do Dialogo para configuração dos Timers //\n        /////////////////////////////////////////////////////////////\n        function resetElementosTimers() {\n            // Mudar estado dos elementos\n            document.getElementById(\"div_guardar_tmrs\").disabled = true;\n            document.getElementById(\"div_guardar_tmrs\").querySelector('svg').style.stroke = \"gray\";\n\n            var radList = document.getElementsByName('select_timer');\n            for (var i = 0; i < radList.length; i++) { radList[i].checked = false; }\n\n            var chckList = document.getElementsByName('sel_week_day');\n            for (var i = 0; i < chckList.length; i++) { chckList[i].checked = false; }\n\n            document.getElementById(\"chk_activar\").checked = false;\n            //document.getElementById('select_saida').selectedIndex = -1;\n            document.getElementById('select_accao').selectedIndex = -1;\n            document.getElementById(\"time_hora\").value = \"--:-- --\";\n            \n        } // Fim de resetElementos()\n           \n\n\n        /*function mouseX(evt) {\n            if (evt.pageX) {\n            return evt.pageX;\n            } else if (evt.clientX) {\n            return evt.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft :document.body.scrollLeft);\n            } else {\n            return null;\n            }\n        }\n        \n        function mouseY(evt) {\n            if (evt.pageY) {\n            return evt.pageY;\n            } else if (evt.clientY) {\n            return evt.clientY + (document.documentElement.scrollTop ?document.documentElement.scrollTop :document.body.scrollTop);\n            } else {\n            return null;\n            }\n        }*/   \n\n})(scope);\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 220,
        "wires": [
            [
                "f23cb857aea720fd"
            ]
        ]
    },
    {
        "id": "309f36a42160b721",
        "type": "inject",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "name": "simulador",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "zigbee2mqtt/bridge/devices",
        "payload": "[{\"ieeeAddress\":\"0xa4c138e342bdfb48\",\"friendlyName\":\"Corredor\"},{\"ieeeAddress\":\"0x28dba7fffe1af100\",\"friendlyName\":\"Laboratorio\"},{\"ieeeAddress\":\"0x28dba7fffe1af101\",\"friendlyName\":\"Sala\"},{\"ieeeAddress\":\"0x28dba7fffe1af102\",\"friendlyName\":\"Cozinha\"},{\"ieeeAddress\":\"0x28dba7fffe1af103\",\"friendlyName\":\"Quintal\"},{\"ieeeAddress\":\"0x28dba7fffe1af104\",\"friendlyName\":\"Exterior\"},{\"ieeeAddress\":\"0x28dba7fffe1af105\",\"friendlyName\":\"Quarto Suite\"},{\"ieeeAddress\":\"0x28dba7fffe1af106\",\"friendlyName\":\"Quarto Hospedes\"},{\"ieeeAddress\":\"0x28dba7fffe1af107\",\"friendlyName\":\"Quarto Reserva\"},{\"ieeeAddress\":\"0x28dba7fffe1af108\",\"friendlyName\":\"Dispensa\"}]",
        "payloadType": "json",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "90e27a5e03e949c4"
            ]
        ]
    },
    {
        "id": "9a06ab53c49070f5",
        "type": "mqtt out",
        "z": "0beaa6996a1f29f5",
        "g": "3ee1f23d948eca69",
        "name": "pub_topic_undefined",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 1100,
        "y": 200,
        "wires": [],
        "info": "Topico a publicar indefinido, depende da msg (msg.topic, msg.payload) que receber."
    },
    {
        "id": "71e853f91d4bce27",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "g": "3ee1f23d948eca69",
        "name": "pub_all_topics",
        "func": "\nvar json = JSON.parse(msg.payload);\n\nif(json.id && json.state){\n    // Processar TOGGLE\n    msg.topic = 'zigbee2mqtt/' + json.id + '/set';\n    msg.payload = json.state;\n    return [msg, null];\n    \n} else if(json.topico && json.carga) {\n    // Processar RENAME\n    msg.topic = json.topico;\n    msg.payload = json.carga; \n    return [msg, null];   \n}\nelse if (json.getdevstate ) {\n    // Processar GET_DEVS_STATE\n    \n    // Obter dados da variavel global\n    const listaDevs = global.get(\"devsList\");\n    var messages = [];\n\n    // Loop através da lista de tópicos\n    for (var i = 0; i < listaDevs.length; i++) {\n        messages.push({\n            topic: 'zigbee2mqtt/' + listaDevs[i].ieeeAddress + '/get',\n            payload: '{\"state\":\"\"}'\n        });\n    }\n\n    // Define a lista de mensagens como payload\n    return [[messages], null];\n}\nelse if (json.cmdtimer == 'CONFIG_TIMER') {\n    msg.payload = {\n        command: json.command,\n        name: json.name,\n        topic: json.topic,\n        expression: json.expression,\n        payload: json.payload,\n        payloadType: json.payloadType\n    };\n\n    return[null, msg]\n}\nelse if (json.cmdtimer == 'GET_TIMER') {\n    msg.payload = {\n        command: json.command,\n        name: json.name\n    };\n\n    return [null, msg]\n}\nelse if (json.cmdtimer == 'TIMER_STATE') {\n    msg.payload = {\n        command: json.command,\n        name: json.name\n    };\n\n    return [null, msg]\n}\n\n\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 240,
        "wires": [
            [
                "9a06ab53c49070f5"
            ],
            [
                "54cd2eab727bd786"
            ]
        ],
        "outputLabels": [
            "devs state",
            "tmrs state"
        ],
        "info": "Conforma _**msg**_ para o topico correspondente."
    },
    {
        "id": "4a536bf03d77fa1b",
        "type": "mqtt in",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "Rx estado devs",
        "topic": "zigbee2mqtt/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 360,
        "wires": [
            [
                "2ccd1e847106724a"
            ]
        ],
        "info": "Subescreve no topico _**zigbee2mqtt/#**_"
    },
    {
        "id": "2ccd1e847106724a",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "devices_state",
        "func": "\n// Obter dados da variavel global\nconst listaDevs = global.get(\"devsList\");\n\nconst topico = msg.topic;\n\nif(msg.payload.state != 'TOGGLE' && !topico.includes('bridge') && !topico.includes('Cordinator') && !topico.includes('get')){\n    \n    // Obter nome do device\n    const parts = (msg.topic).split('/');\n    const deviceName = parts[1];\n    const get_estado = msg.payload.state;\n    msg.payload = deviceName;\n\n    // Obter ID do device\n    const device = listaDevs.find(d => d.friendlyName === deviceName);\n    if (device) {\n        msg.topic = 'DEVICES_STATE';\n        msg.payload = { Id: device.ieeeAddress, Nome:deviceName ,Estado: get_estado };\n    } else {\n        return;\n    }   \n}\nelse{\n    return;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 360,
        "wires": [
            [
                "43961d85d615df4c"
            ]
        ],
        "outputLabels": [
            "dvs info"
        ],
        "info": "Cria objecto json com o _**Id**_, _**Nome**_ e _**Estado**_ dos dispositivos, para ser enviado aos clientes WebSocket."
    },
    {
        "id": "fd26370ab7ab7785",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "g": "3ee1f23d948eca69",
        "name": "mult_topics_pub",
        "func": "\n\n// Obter dados da variavel global\nconst listaDevs = global.get(\"devsList\");\nvar messages = [];\n\n\nlet intervalTime = 1000;  // Intervalo de 5 segundos (5000 milissegundos)\nvar cont = 0;\n// Armazenar o intervalo na memória do contexto global\nlet interval = context.get('interval');\n\n// Verifique se o intervalo já foi criado, para não duplicar\nif (interval) {\n    clearInterval(interval);\n}\n\n// Criar um novo intervalo\ninterval = setInterval(() => {\n\n    if (cont < listaDevs.length){\n        var obj = {\n            topic: `zigbee2mqtt/${listaDevs[cont++].ieeeAddress}/get`,\n            payload: '{\"state\":\"\"}'\n        };\n          \n        node.send(obj);   \n    }\n    else{\n        cont = 0;\n        clearInterval(interval);\n        context.set('interval', null);\n    }   \n    \n}, intervalTime);\n\n// Armazenar o novo intervalo no contexto\ncontext.set('interval', interval);\n\n\n\n\n// Loop através da lista de tópicos\n/*for (var i = 0; i < listaDevs.length; i++) {\n    messages.push({\n        topic: 'zigbee2mqtt/' + listaDevs[i].ieeeAddress + '/get',\n        payload: '{\"state\":\"\"}'\n    });\n}\n\n// Define a lista de mensagens como payload\nreturn [messages];*/\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 200,
        "wires": [
            [
                "9a06ab53c49070f5"
            ]
        ],
        "info": "Envia varias mensagens, para varios topicos, imultaneamente."
    },
    {
        "id": "41eb52916554a285",
        "type": "comment",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "name": "Tx, p/ dashboard, lista dos dispositivos, p/criar cards.",
        "info": "",
        "x": 250,
        "y": 140,
        "wires": []
    },
    {
        "id": "1297e78492203004",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "refresh_dashboard",
        "func": "\n\n// Obter dados da variavel global;\nmsg.payload = global.get(\"devsList\");\nmsg.topic = 'zigbee2mqtt/bridge/devices';\nnode.send([msg, null]);\n\nmsg.topic = null;\nmsg.payload = {\"command\": \"status-all\" }\n\nnode.send([null, msg]);\n\nreturn null;\n\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 440,
        "wires": [
            [
                "bc33560d5b48ff20"
            ],
            [
                "1099018ad3951c36"
            ]
        ],
        "outputLabels": [
            "send devs list",
            "ask tmrs status"
        ],
        "info": "Cria objecto json com o _**Id**_, _**Nome**_ e _**Estado**_ dos dispositivos, para ser enviado aos clientes WebSocket."
    },
    {
        "id": "a11a302c953a208b",
        "type": "cronplus",
        "z": "0beaa6996a1f29f5",
        "name": "Timers",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "file",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [],
        "x": 710,
        "y": 340,
        "wires": [
            [
                "7ee5291bc7684b37",
                "0ff050d3f826a601"
            ]
        ]
    },
    {
        "id": "7ee5291bc7684b37",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "name": "ConifgTimers",
        "func": "\nif (msg.payload.config) {\n    // Extrair topic e payload do objeto disparado pelo cron-plus\n    let topic = msg.payload.config.topic;\n    let payload = msg.payload.config.payload;\n\n    // Formatando a mensagem MQTT\n    msg.topic = topic;\n    msg.payload = payload;  \n\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 340,
        "wires": [
            [
                "d503359eaa83e5e3"
            ]
        ],
        "info": "Configuração de Timers"
    },
    {
        "id": "1cdb8dedb7d260f5",
        "type": "ui_ui_control",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "ctrl dashboard",
        "events": "all",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "1297e78492203004",
                "37c476c514361a18"
            ]
        ],
        "info": "Cotrola abertura da dashboard."
    },
    {
        "id": "fcdd74607279832b",
        "type": "debug",
        "z": "0beaa6996a1f29f5",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 460,
        "wires": []
    },
    {
        "id": "0ff050d3f826a601",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "name": "GetTimersConfig",
        "func": "\nif(!msg.payload.result){\n    return null;\n}\n\n// Se o Timer selecionado nao esta configurado, retornar null\nif (!msg.payload.result.config){\n    msg.topic = 'GET_TIMER';\n    msg.payload = null;\n    return msg;\n}\nelse if (Array.isArray(msg.payload.result)) {\n    // Obtem o array result do JSON de entrada\n    let results = msg.payload.result;\n\n    // Cria um array para armazenar as mensagens de saída\n    let output = [];\n\n    // Percorre cada objeto no array result\n    for (let i = 0; i < results.length; i++) {\n        let config = results[i].config;\n\n        // Extrai os valores de name, payload e expression\n        let name = config.name;\n        let payload = config.payload;\n        let expression = config.expression;\n        let isrunning = config.isRunning;\n\n        // Cria uma nova mensagem com esses valores\n        let newMsg = {\n            name: name,\n            payload: payload,\n            expression: expression,\n            isrunning: isrunning\n        };\n\n        // Adiciona ao array de saída\n        output.push(newMsg);\n    }\n\n    // Retorna a lista de mensagens\n    msg.topic = 'GET_ALL_TIMERS';\n    msg.payload = output;\n    return msg;\n\n}\nelse if (typeof msg.payload.result === 'object'){\n    // Enviar dados do Timer, configurado, seleccionado\n    //let timer = msg.payload.result.config.name;\n    let accao = JSON.parse(msg.payload.result.config.payload);\n    let activo = msg.payload.result.config.isRunning;\n    let hora_weekdays = msg.payload.result.config.expression;\n\n    var objecto = {\n        Accao: accao.state,\n        Activo: activo,\n        HoraWeekDays: hora_weekdays\n    };\n   \n    msg.topic = 'GET_DEV_TIMER';\n    msg.payload = JSON.stringify(objecto);\n\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 400,
        "wires": [
            [
                "5e707f241894561a"
            ]
        ],
        "outputLabels": [
            "tmrs data"
        ],
        "info": "Obter configurações dos Timers."
    },
    {
        "id": "e2a37c97da061523",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "name": "DEBUG_TX",
        "mode": "link",
        "links": [
            "2108d2cffb4ad97c",
            "c7915cc60d10e1f6"
        ],
        "x": 225,
        "y": 180,
        "wires": []
    },
    {
        "id": "2108d2cffb4ad97c",
        "type": "link in",
        "z": "0beaa6996a1f29f5",
        "name": "DEBUG_RX",
        "links": [
            "e2a37c97da061523"
        ],
        "x": 615,
        "y": 460,
        "wires": [
            [
                "fcdd74607279832b"
            ]
        ]
    },
    {
        "id": "37c476c514361a18",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "CTRL DASHBOARD",
        "mode": "link",
        "links": [
            "1509f37ac7cea351"
        ],
        "x": 315,
        "y": 400,
        "wires": []
    },
    {
        "id": "1509f37ac7cea351",
        "type": "link in",
        "z": "0beaa6996a1f29f5",
        "g": "3ee1f23d948eca69",
        "name": "CTRL DASHBOARD",
        "links": [
            "37c476c514361a18"
        ],
        "x": 725,
        "y": 200,
        "wires": [
            [
                "fd26370ab7ab7785"
            ]
        ]
    },
    {
        "id": "1099018ad3951c36",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "ASK_TMR_STATUS",
        "mode": "link",
        "links": [
            "96c667c8bfdb87ee"
        ],
        "x": 525,
        "y": 460,
        "wires": []
    },
    {
        "id": "96c667c8bfdb87ee",
        "type": "link in",
        "z": "0beaa6996a1f29f5",
        "name": "ASK_TMR_STATUS",
        "links": [
            "1099018ad3951c36",
            "54cd2eab727bd786"
        ],
        "x": 605,
        "y": 340,
        "wires": [
            [
                "a11a302c953a208b"
            ]
        ]
    },
    {
        "id": "bc33560d5b48ff20",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "SEND_DEVS_LIST",
        "mode": "link",
        "links": [
            "02fc8a877b7ea6d6"
        ],
        "x": 525,
        "y": 420,
        "wires": []
    },
    {
        "id": "43961d85d615df4c",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "g": "c3ab0dbe501d9f51",
        "name": "SEND_DEVS_INFO",
        "mode": "link",
        "links": [
            "02fc8a877b7ea6d6"
        ],
        "x": 505,
        "y": 360,
        "wires": []
    },
    {
        "id": "02fc8a877b7ea6d6",
        "type": "link in",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "name": "INFO_RECEIVER",
        "links": [
            "43961d85d615df4c",
            "5e707f241894561a",
            "bc33560d5b48ff20"
        ],
        "x": 395,
        "y": 260,
        "wires": [
            [
                "90e27a5e03e949c4"
            ]
        ]
    },
    {
        "id": "5e707f241894561a",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "name": "TMERS_DATA",
        "mode": "link",
        "links": [
            "02fc8a877b7ea6d6"
        ],
        "x": 935,
        "y": 400,
        "wires": []
    },
    {
        "id": "f23cb857aea720fd",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "g": "517334cfab6ca23d",
        "name": "UI_TEMPLATE_OUTPUT",
        "mode": "link",
        "links": [
            "524f549acd731bb4"
        ],
        "x": 605,
        "y": 220,
        "wires": []
    },
    {
        "id": "524f549acd731bb4",
        "type": "link in",
        "z": "0beaa6996a1f29f5",
        "g": "3ee1f23d948eca69",
        "name": "UI_TEMPLATE",
        "links": [
            "f23cb857aea720fd"
        ],
        "x": 725,
        "y": 240,
        "wires": [
            [
                "71e853f91d4bce27"
            ]
        ]
    },
    {
        "id": "54cd2eab727bd786",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "g": "3ee1f23d948eca69",
        "name": "TIMERS_STATE",
        "mode": "link",
        "links": [
            "96c667c8bfdb87ee"
        ],
        "x": 955,
        "y": 260,
        "wires": []
    },
    {
        "id": "d503359eaa83e5e3",
        "type": "link out",
        "z": "0beaa6996a1f29f5",
        "name": "SEND_TIMERS_CFG",
        "mode": "link",
        "links": [
            "b37e4fcea4db6f07"
        ],
        "x": 995,
        "y": 340,
        "wires": []
    },
    {
        "id": "b37e4fcea4db6f07",
        "type": "link in",
        "z": "0beaa6996a1f29f5",
        "g": "3ee1f23d948eca69",
        "name": "GET_TIMERS_CFG",
        "links": [
            "d503359eaa83e5e3"
        ],
        "x": 945,
        "y": 160,
        "wires": [
            [
                "9a06ab53c49070f5"
            ]
        ]
    },
    {
        "id": "4b987d0436224414",
        "type": "mqtt in",
        "z": "8b55905ab0ab9e1a",
        "name": "SubCrredor",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 80,
        "wires": [
            [
                "d3b55f56f898bfd2"
            ]
        ]
    },
    {
        "id": "a61803cdd828e680",
        "type": "mqtt out",
        "z": "8b55905ab0ab9e1a",
        "name": "PubCorredor",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/set",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "7654440607e22e25",
        "type": "ui_button",
        "z": "8b55905ab0ab9e1a",
        "name": "",
        "group": "25c1a189950c0bad",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Corredor Hall",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"TOGGLE\"}",
        "payloadType": "json",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/set",
        "topicType": "msg",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "a61803cdd828e680"
            ]
        ]
    },
    {
        "id": "9dd2c2f07f92c271",
        "type": "ui_switch",
        "z": "8b55905ab0ab9e1a",
        "name": "",
        "label": "Corredor Hall",
        "tooltip": "",
        "group": "25c1a189950c0bad",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/set",
        "topicType": "msg",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "a61803cdd828e680"
            ]
        ]
    },
    {
        "id": "d3b55f56f898bfd2",
        "type": "function",
        "z": "8b55905ab0ab9e1a",
        "name": "criapayload",
        "func": "\n\nif (msg.payload.state === \"ON\") {\n    msg.payload = {\"state\": \"ON\"};\n} else if (msg.payload.state === \"OFF\") {\n    msg.payload = {\"state\": \"OFF\"};;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 80,
        "wires": [
            [
                "9dd2c2f07f92c271"
            ]
        ]
    },
    {
        "id": "8038f2518386383b",
        "type": "mqtt in",
        "z": "8b55905ab0ab9e1a",
        "name": "SubLaboratorio",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "ccc2d7aac51e2584"
            ]
        ]
    },
    {
        "id": "18e2e19c6b576bf2",
        "type": "mqtt out",
        "z": "8b55905ab0ab9e1a",
        "name": "PubLaboratorio",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/set",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 880,
        "y": 360,
        "wires": []
    },
    {
        "id": "0c8b972116090ba3",
        "type": "ui_button",
        "z": "8b55905ab0ab9e1a",
        "name": "",
        "group": "25c1a189950c0bad",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Laboratorio",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"TOGGLE\"}",
        "payloadType": "json",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/set",
        "topicType": "msg",
        "x": 670,
        "y": 420,
        "wires": [
            [
                "18e2e19c6b576bf2"
            ]
        ]
    },
    {
        "id": "6da6025aa51436a5",
        "type": "ui_switch",
        "z": "8b55905ab0ab9e1a",
        "name": "",
        "label": "Laboratorio",
        "tooltip": "",
        "group": "25c1a189950c0bad",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/set",
        "topicType": "msg",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 360,
        "wires": [
            [
                "18e2e19c6b576bf2"
            ]
        ]
    },
    {
        "id": "ccc2d7aac51e2584",
        "type": "function",
        "z": "8b55905ab0ab9e1a",
        "name": "criapayload",
        "func": "\nif (msg.payload.state === \"ON\") {\n    msg.payload = {\"state\": \"ON\"};\n} else if (msg.payload.state === \"OFF\") {\n    msg.payload = {\"state\": \"OFF\"};;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "6da6025aa51436a5"
            ]
        ]
    },
    {
        "id": "563d406e4d64a3d4",
        "type": "inject",
        "z": "8b55905ab0ab9e1a",
        "d": true,
        "name": "AskStateTemp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\": \"\"}",
        "payloadType": "json",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "5be6d029bcfd2a09"
            ]
        ]
    },
    {
        "id": "668e6b8250866bae",
        "type": "inject",
        "z": "8b55905ab0ab9e1a",
        "d": true,
        "name": "AskStateTemp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\": \"\"}",
        "payloadType": "json",
        "x": 320,
        "y": 420,
        "wires": [
            [
                "9950f4a3738a3e5d"
            ]
        ]
    },
    {
        "id": "5be6d029bcfd2a09",
        "type": "mqtt out",
        "z": "8b55905ab0ab9e1a",
        "name": "AskState",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/get",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 480,
        "y": 140,
        "wires": [],
        "info": "Solicita estado do dispositivo, cada X tempo, para actualizar o estado do Botao."
    },
    {
        "id": "9950f4a3738a3e5d",
        "type": "mqtt out",
        "z": "8b55905ab0ab9e1a",
        "name": "AskState",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/get",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 500,
        "y": 420,
        "wires": [],
        "info": "Solicita estado do dispositivo, cada X tempo, para actualizar o estado do Botao."
    },
    {
        "id": "9ce23942421cb05d",
        "type": "websocket in",
        "z": "8b55905ab0ab9e1a",
        "d": true,
        "name": "ServidorWS_Rx",
        "server": "542f751e15337c46",
        "client": "",
        "x": 620,
        "y": 260,
        "wires": [
            [
                "1dd6a00900561d6d"
            ]
        ],
        "info": "Servidor WebSocket (nó para receber dados dos clientes)."
    },
    {
        "id": "1dd6a00900561d6d",
        "type": "function",
        "z": "8b55905ab0ab9e1a",
        "d": true,
        "name": "func_devs",
        "func": "\nmsg.payload = JSON.parse(msg.payload);\nvar elementos = [];\nconst id = msg.payload[0].id;\nvar array_json = msg.payload;\nvar total_obj_json = array_json.length;\n\nfor(var cont = 0; cont < total_obj_json; cont++){\n    if(cont == id){\n        msg.payload = msg.payload[1];\n        elementos[cont] = msg;\n    }\n    else{\n         elementos[cont] = null\n    }   \n}\n\nreturn elementos;\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 260,
        "wires": [
            [
                "a61803cdd828e680"
            ],
            [
                "18e2e19c6b576bf2"
            ]
        ],
        "info": "Reencaminha payload, _**{\"state\":\"TOGGLE\"}**_, aos dispositivos correspondentes."
    },
    {
        "id": "e75464abf565d962",
        "type": "websocket out",
        "z": "8b55905ab0ab9e1a",
        "d": true,
        "name": "ServidorWS_Tx",
        "server": "542f751e15337c46",
        "client": "",
        "x": 380,
        "y": 260,
        "wires": [],
        "info": "Servidor WebSocket (nó para enviar dados aos clientes)."
    },
    {
        "id": "6d95d447d6f017c2",
        "type": "inject",
        "z": "8b55905ab0ab9e1a",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "e75464abf565d962"
            ]
        ]
    },
    {
        "id": "36e26f7fa6344b52",
        "type": "ui_template",
        "z": "8b55905ab0ab9e1a",
        "group": "a8fb24efc195e0c7",
        "name": "Timer",
        "order": 1,
        "width": 6,
        "height": 8,
        "format": "\n<style>\n    :root {\n    --clr: #222327;\n    --altura_grupo: 30vh;\n    --off_set_altura_grupo: 10vh;\n    }\n    \n    * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    \n    /* Impede Seleccção e Copia */\n    -moz-user-select: none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    }\n    \n    \n    /***************************** CARDS/GRIDS ***********************************************/\n    .div_img_clk {\n    padding-top: 2px;\n    margin-right: 6px;\n    display: inline-flex;\n    }\n    \n    .div_historico {\n    display: inline-flex;\n    position: relative;\n    text-align: center;\n    font-size: 16px;\n    }\n    \n    #tr_historico {\n    display: block;\n    }\n    \n    .grid_container {\n    display: grid;\n    grid-template-rows: 50% 50%;\n    padding-top: 5px;\n    gap: 5px;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    .grid_container>div {\n    border: 1px solid rgb(168, 168, 168);\n    text-align: center;\n    border-radius: 5x;\n    }\n    \n    .card {\n    position: relative;\n    width: 290px;\n    height: 70px;\n    box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);\n    border: 1px solid rgba(140, 140, 140, .5);\n    background-color: #FFFFFF;\n    background-color: rgb(100, 100, 100);\n    color: black;\n    transition: 0.3s;\n    border-radius: 5px;\n    padding-top: 5px;\n    }\n    \n    #cards_container {\n    display: box;\n    position: absolute;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    \n    .div_nome {\n    text-align: left;\n    padding-left: 5px;\n    width: 195px;\n    font-weight: bold;\n    font-size: 14px;\n    }\n    \n    \n    .card:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    }\n    \n    \n    .text_container {\n    position: relative;\n    font-size: 12px;\n    width: 98%;\n    }\n    \n    \n    #tab_energia td {\n    padding: 0px;\n    font-size: 12px;\n    }\n    \n    #tbl_hist_clk th {\n    border: none;\n    }\n    \n    #svg_configurations circle {\n    fill: none;\n    stroke: lightgray;\n    }\n    \n    #svg_guardar_tmr, #svg_guardar_rnm {\n    stroke: green;\n    }\n    \n    #svg_guardar_tmr path, #svg_guardar_rnm path{\n    fill: none;\n    }\n    \n    \n    .div_img {\n    position: relative;\n    border-radius: 50%;\n    padding: 2px;\n    width: 35px;\n    height: 35px;\n    margin-right: 10px;\n    margin-left: 10px;\n    }\n    \n    \n    \n    /****************** MENU CONTEXTUAL ********************/\n    .menu_contextual {\n    display: none;\n    /* The following line is responsible for all the magic */\n    transform: translateX(min(var(--mouse-x), calc(100vw - 100%))) translateY(min(var(--mouse-y), calc(100vh - 100%)));\n    width: auto;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    padding: 0px 5px 5px 5px;\n    border-radius: 5px;\n    background: #4e94ab;\n    align-items: left;\n    }\n    \n    \n    .menu_contextual ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    /*justify-content: center|left|...;*/\n    }\n    \n    \n    .menu_contextual li {\n    border-bottom: 1px solid #fff;\n    }\n    \n    .menu_contextual li a {\n    display: flex;\n    padding: 5px;\n    color: #000000;\n    text-decoration: none;\n    font-size: 18px;\n    }\n    \n    a>svg {\n    position: relative;\n    top: 5px;\n    }\n    \n    \n    /*----------------------- CONFIGURAÇÔES TIMERS --------------------------*/\n    #div_cfg_tmrs_wrapper {\n    display: block;\n    position: absolute;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    #div_cfg_tmrs {\n    display: block;\n    position: absolute;\n    width: 300px;\n    height: 370px;\n    top: 10px;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgb(100, 100, 100);\n    color: white;\n    border: 1px solid whitesmoke;\n    border-radius: 5px;\n    }\n    \n    \n    \n    #div_estado {\n    position: absolute;\n    display: inline-flex;\n    padding: 5px;\n    width: 30px;\n    height: 30px;\n    top: 10px;\n    right: 1px;\n    cursor: pointer;\n    border-radius: 50%;\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    \n    #div_separador_cfg_top {\n    position: absolute;\n    top: 15px;\n    display: block;\n    width: 100%;\n    border: 0px solid white;\n    font-size: 20px;\n    text-align: center;\n    text-decoration: underline;\n    cursor: pointer;\n    }\n    \n    #div_tmr {\n    position: relative;\n    top: 60px;\n    display: flex;\n    height: 45px;\n    width: 95%;\n    overflow: auto;\n    margin: auto;\n    justify-content: center;\n    }\n    \n    \n    #div_tmr>label {\n    padding: 5px 25px 5px 5px;\n    position: relative;\n    cursor: pointer;\n    width: 5px;\n    }\n    \n    .hora {\n    height: 100%;\n    }\n    \n    #hora_actual {\n    padding: 5px;\n    display: inline;\n    color: yellow;\n    }\n    \n    #div_semana {\n    position: relative;\n    top: 95px;\n    display: flex;\n    height: 35px;\n    width: 250px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    }\n    \n    #div_semana>label {\n    padding: 5px 30px 5px 5px;\n    position: relative;\n    cursor: pointer;\n    width: 5px;\n    }\n    \n    span:hover {\n    background: rgb(67, 67, 240);\n    }\n    \n    label input {\n    display: none;\n    }\n    \n    label span {\n    border: 2px solid #ccc;\n    width: 25px;\n    height: 25px;\n    position: absolute;\n    overflow: hidden;\n    line-height: 1.4;\n    text-align: center;\n    border-radius: 100%;\n    font-size: 12pt;\n    color: white;\n    }\n    \n    input:checked+span {\n    background: rgb(7, 7, 7);\n    border-color: rgb(190, 209, 16);\n    }\n    \n    #chk_activar {\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n    background-color: #eee;\n    }\n    \n    \n    .cfg_timers {\n    position: relative;\n    bottom: 10px;\n    display: flex;\n    width: 35px;\n    height: 35px;\n    margin-left: 1px;\n    cursor: pointer;\n    margin-right: 2px;   \n    }\n    \n    #div_past_timer{\n    margin-left: 10px;\n    }\n    \n    #div_copy_timer{\n    margin-right: 10px;\n    }\n    \n    #div_share_timer{\n    margin-right: 10px;\n    }\n  \n    \n    #div_wrapper_save_tmrs {\n    position: relative;\n    margin-top: 105px;\n    display: inline-flex;\n    justify-content: center;\n    width: 100%;\n    }\n    \n    /********************************** TABELA ******************************************/\n    #td_hora_actual {\n    text-align: center;\n    }\n    \n    #tbl_cmd>td,\n    th {\n    border: 1px solid gray;\n    text-align: left;\n    padding: 1px;\n    }\n    \n    .esquerda {\n    text-align: left;\n    }\n    \n    #tbl_cmd {\n    position: relative;\n    top: 35%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    }\n    \n    \n    /*----------------------- CONFIGURAÇÔES-RENOMEAR --------------------------*/\n    #div_wrapper_set_name {\n    display: none;\n    position: absolute;\n    top: 0px;\n    width: 100%;\n    height: 100vh;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    #div_set_name{\n    display: block;\n    position: relative;\n    width: 95%;\n    height: 75px;\n    padding: 0px;\n    top: 5px;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgb(100, 100, 100);\n    color: white;\n    }\n    \n    .wrapper_guardar_sair{\n    display: inline-flex;\n    position: relative;\n    width: 40%;\n    height: 35px;\n    justify-content: center;   \n    }\n    \n    #div_sair {\n    position: relative;\n    bottom: 6px;\n    display: flex;\n    width: 30px;\n    height: 30px;\n    margin-left:0px;\n    margin-right:2px;\n    cursor: pointer;\n    }\n    \n    #div_guardar {\n    position: relative;\n    bottom: 6px;\n    display: flex;\n    width: 30px;\n    height: 30px;\n    margin-right: 2px;\n    cursor: pointer;\n    }\n    \n    \n    #div_buttons_set_name {\n    position: relative;\n    margin-top: 20px;\n    display: inline-flex;\n    justify-content: center;\n    width: 100%;\n    }\n    \n    #txt_nome {\n    position: relative;\n    width: 100%;\n    padding-right: 8px;\n    font-size: 16px;\n    text-align: center;\n    text-decoration: none;\n    }\n    \n    \n    .back_btn{\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0px;\n    width: 35px;\n    height: 35px;\n    cursor: pointer;\n    background-color: rgb(20, 20, 20);\n    border-radius: 50%;\n    }\n</style>\n\n\n<!-- div_cfg_tmrs_wrapper -->\n<div id=\"div_cfg_tmrs_wrapper\">\n    <!-- div_cfg_tmrs -->\n    <div id=\"div_cfg_tmrs\">\n        <div id=\"div_separador_cfg_top\" ondblclick=\"reset_device();\">\n            <div><b>TEMPORIZADORES</b></div>\n        </div>\n        <div id=\"div_estado\" ondblclick=\"openDlgSetOTAClients();\"></div>\n        <div id=\"div_tmr\">\n\n            <label id=\"lbl1\"><input type=\"radio\" value=\"1\" name=\"select_timer\" /><span>1</span>\n                <p></p>\n            </label>\n            <label id=\"lbl2\"><input type=\"radio\" value=\"2\" name=\"select_timer\" /><span>2</span>\n                <p></p>\n            </label>\n            <label id=\"lbl3\"><input type=\"radio\" value=\"3\" name=\"select_timer\" /><span>3</span>\n                <p></p>\n            </label>\n            <label id=\"lbl4\"><input type=\"radio\" value=\"4\" name=\"select_timer\" /><span>4</span>\n                <p></p>\n            </label>\n            <label id=\"lbl5\"><input type=\"radio\" value=\"5\" name=\"select_timer\" /><span>5</span>\n                <p></p>\n            </label>\n            <label id=\"lbl6\"><input type=\"radio\" value=\"6\" name=\"select_timer\" /><span>6</span>\n                <p></p>\n            </label>\n            <label id=\"lbl7\"><input type=\"radio\" value=\"7\" name=\"select_timer\" /><span>7</span>\n                <p></p>\n            </label>\n            <label id=\"lbl8\"><input type=\"radio\" value=\"8\" name=\"select_timer\" /><span>8</span>\n                <p></p>\n            </label>\n            <label id=\"lbl9\"><input type=\"radio\" value=\"9\" name=\"select_timer\" /><span>9</span>\n                <p></p>\n            </label>\n            <label id=\"lbl10\"><input type=\"radio\" value=\"10\" name=\"select_timer\" /><span>10</span>\n                <p></p>\n            </label>\n            <label id=\"lbl11\"><input type=\"radio\" value=\"11\" name=\"select_timer\" /><span>11</span>\n                <p></p>\n            </label>\n            <label id=\"lbl12\"><input type=\"radio\" value=\"12\" name=\"select_timer\" /><span>12</span>\n                <p></p>\n            </label>\n            <label id=\"lbl13\"><input type=\"radio\" value=\"13\" name=\"select_timer\" /><span>13</span>\n                <p></p>\n            </label>\n            <label id=\"lbl14\"><input type=\"radio\" value=\"14\" name=\"select_timer\" /><span>14</span>\n                <p></p>\n            </label>\n            <label id=\"lbl15\"><input type=\"radio\" value=\"15\" name=\"select_timer\" /><span>15</span>\n                <p></p>\n            </label>\n            <label id=\"lbl16\"><input type=\"radio\" value=\"16\" name=\"select_timer\" /><span>16</span>\n                <p></p>\n            </label>\n\n        </div>\n\n\n        <table id=\"tbl_cmd\">\n            <tr>\n                <td>\n                    <label id=\"lbl_activar\" for=\"activar\">Activar:</label>\n                </td>\n                <td class=\"esquerda\">\n                    <input type=\"checkbox\" id=\"chk_activar\" name=\"activar\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"select_out\">Saída:</label>\n                </td>\n                <td class=\"esquerda\">\n                    <select id=\"select_saida\" name=\"select_out\">\n                        <option value=\"opt_1\">1</option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"select_action\">Acção: </label>\n                </td>\n                <td class=\"esquerda\">\n                    <select id=\"select_accao\" name=\"select_action\">\n                        <option value=\"opt_off\">Desligar</option>\n                        <option value=\"opt_on\">Ligar</option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label class=\"hora\" for=\"appt-time\">Hora: </label>\n                </td>\n                <td class=\"esquerda\">\n                    <input class=\"hora\" id=\"time_hora\" type=\"time\" name=\"appt-time\" value=\"00:00\">\n                </td>\n            </tr>\n            <tfoot>\n                <tr>\n                    <td id=\"td_hora_actual\" colspan=\"2\">\n                        <div id=\"hora_actual\">Hora</div>\n                    </td>\n                </tr>\n            </tfoot>\n        </table>\n\n\n        <div id=\"div_semana\">\n            <label><input id=\"0\" type=\"checkbox\" name=\"sel_week_day\" /><span>D</span>\n                <p></p>\n            </label>\n            <label><input id=\"1\" type=\"checkbox\" name=\"sel_week_day\" /><span>S</span>\n                <p></p>\n            </label>\n            <label><input id=\"2\" type=\"checkbox\" name=\"sel_week_day\" /><span>T</span>\n                <p></p>\n            </label>\n            <label><input id=\"3\" type=\"checkbox\" name=\"sel_week_day\" /><span>Q</span>\n                <p></p>\n            </label>\n            <label><input id=\"4\" type=\"checkbox\" name=\"sel_week_day\" /><span>Q</span>\n                <p></p>\n            </label>\n            <label><input id=\"5\" type=\"checkbox\" name=\"sel_week_day\" /><span>S</span>\n                <p></p>\n            </label>\n            <label><input id=\"6\" type=\"checkbox\" name=\"sel_week_day\" /><span>S</span>\n                <p></p>\n            </label>\n\n        </div>\n\n        <!-- div_wrapper_save_tmrs -->\n        <div id=\"div_wrapper_save_tmrs\">\n            <div id=\"\" class=\"wrapper_guardar_sair\">\n                <div id=\"div_guardar_tmrs\" class=\"cfg_timers back_btn\" onclick=\"guardarConfigsTimers();\">\n                    <svg id=\"svg_guardar_tmr\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#39be5a\"\n                        stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\n                        <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\n                        <polyline points=\"7 3 7 8 15 8\"></polyline>\n                    </svg>\n                </div>\n                <text x=\"0\" y=\"0\" font-family=\"Arial\" font-size=\"24\" fill=\"black\">Guardar</text>\n            </div>\n        \n            <div id=\"\" class=\"wrapper_guardar_sair\">\n                <div id=\"div_sair_tmrs\" class=\"cfg_timers back_btn\" onclick=\"fecharDlgConfigTimers();\">\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#f80a0a\" stroke-width=\"2\"\n                        stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                        <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                    </svg>\n                </div>\n                <text x=\"0\" y=\"0\" font-family=\"Arial\" font-size=\"24\" fill=\"black\">Fechar</text>\n            </div>\n        \n        </div> <!-- div_wrapper_save_tmrs -->\n\n    </div> <!-- div_cfg_tmrs -->\n</div> <!-- div_cfg_tmrs_wrapper -->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 230,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "e97e4fe3903df8db",
        "type": "ui_template",
        "z": "8b55905ab0ab9e1a",
        "group": "4a0d28640b71ab1d",
        "name": "Rename",
        "order": 1,
        "width": 6,
        "height": 3,
        "format": "\n<style>\n    /*----------------------- CONFIGURAÇÔES-RENOMEAR --------------------------*/\n    #div_wrapper_set_name {\n    display: block;\n    position: absolute;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgba(0, 0, 0, 0.8);\n    }\n    \n    #div_set_name {\n    display: block;\n    position: absolute;\n    width: 260px;\n    height: 95px;\n    padding: 5px;\n    top: 10px;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    background-color: rgb(100, 100, 100);\n    border: solid 2px whitesmoke;\n    color: white;\n    border-radius: 5px;\n    }\n    \n    #div_sair {\n    position: relative;\n    display: flex;\n    width: 35px;\n    height: 35px;\n    margin-left: 10px;\n    cursor: pointer;\n    }\n    \n    #div_guardar {\n    position: relative;\n    display: flex;\n    width: 35px;\n    height: 35px;\n    margin-right: 10px;\n    cursor: pointer;\n    }\n    \n    \n    #div_buttons_set_name {\n    position: relative;\n    margin-top: 20px;\n    display: inline-flex;\n    justify-content: center;\n    width: 100%;\n    }\n    \n    #txt_nome {\n    position: relative;\n    width: 100%;\n    padding-right: 8px;\n    font-size: 16px;\n    text-align: center;\n    text-decoration: none;\n    }\n</style>\n\n\n<!-- div_wrapper_set_name -->\n<div id=\"div_wrapper_set_name\">\n    <!-- div_set_name -->\n    <div id=\"div_set_name\">\n        <!-- maxlength=\"22\" < MAX_NAME_LENGTH -->\n        <input type=\"text\" id=\"txt_nome\" maxlength=\"22\" placeholder=\"Novo nome (24 letras max.)\" autocomplete=\"off\" onkeypress=\"validateASCII(event)\" onkeyup=\"restrictSpecialChars(this);\" />\n\n        <!-- div_buttons_set_name -->\n        <div id=\"div_buttons_set_name\">\n\n            <div id=\"div_guardar\" class=\"back_btn\" onclick=\"alterarNomeDevice();\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"2\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\n                    <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\n                    <polyline points=\"7 3 7 8 15 8\"></polyline>\n                </svg>\n            </div>\n\n            <div id=\"div_tasmota\" class=\"\" ondblclick=\"openTasmotaCmndDlg();\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"gray\" stroke-width=\"2\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n                    <circle cx=\"12\" cy=\"5\" r=\"1\"></circle>\n                    <circle cx=\"12\" cy=\"19\" r=\"1\"></circle>\n                </svg>\n            </div>\n\n            <div id=\"div_sair\" class=\"back_btn\" onclick=\"fecharAlterarNomeDevice();\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#f80a0a\" stroke-width=\"2\"\n                    stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                    <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n                    <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\n                </svg>\n            </div>\n\n        </div> <!-- div_buttons_set_name -->\n    </div><!-- div_set_name -->\n</div><!-- div_wrapper_set_name -->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 240,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "afd44055942f2dfc",
        "type": "inject",
        "z": "8b55905ab0ab9e1a",
        "name": "simulador",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"ieeeAddress\":\"0xa4c138e342bdfb48\",\"friendlyName\":\"Corredor\"},{\"ieeeAddress\":\"0x28dba7fffe1af100\",\"friendlyName\":\"Laboratorio\"},{\"ieeeAddress\":\"0x28dba7fffe1af101\",\"friendlyName\":\"Sala\"},{\"ieeeAddress\":\"0x28dba7fffe1af102\",\"friendlyName\":\"Cozinha\"},{\"ieeeAddress\":\"0x28dba7fffe1af103\",\"friendlyName\":\"Quintal\"},{\"ieeeAddress\":\"0x28dba7fffe1af104\",\"friendlyName\":\"Exterior\"},{\"ieeeAddress\":\"0x28dba7fffe1af105\",\"friendlyName\":\"Quarto Suite\"},{\"ieeeAddress\":\"0x28dba7fffe1af106\",\"friendlyName\":\"Quarto Hospedes\"},{\"ieeeAddress\":\"0x28dba7fffe1af107\",\"friendlyName\":\"Quarto Reserva\"},{\"ieeeAddress\":\"0x28dba7fffe1af108\",\"friendlyName\":\"Dispensa\"}]",
        "payloadType": "json",
        "x": 380,
        "y": 480,
        "wires": [
            [
                "0e6be6ca9b0fe00d"
            ]
        ]
    },
    {
        "id": "0e6be6ca9b0fe00d",
        "type": "ui_template",
        "z": "8b55905ab0ab9e1a",
        "group": "46c26955ac1c6966",
        "name": "Cards",
        "order": 1,
        "width": 6,
        "height": 8,
        "format": "<style>\n    :root {\n        --clr: #222327;\n        --altura_grupo: 30vh;\n        --off_set_altura_grupo: 10vh;\n    }\n\n    * {\n        /* Impede Seleccção e Copia */\n        -moz-user-select: none;\n        -khtml-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n\n\n    /***************************** CARDS/GRIDS ***********************************************/\n    .div_img_clk {\n        padding-top: 2px;\n        margin-right: 6px;\n        display: inline-flex;\n    }\n\n    .div_historico {\n        display: inline-flex;\n        position: relative;\n        text-align: center;\n        font-size: 16px;\n    }\n\n    #tr_historico {\n        display: block;\n    }\n\n    .grid_container {\n       display: grid;\n        grid-template-rows: 50% 50%;\n        padding-top: 5px;\n        gap: 5px;\n        justify-content: center;\n        background-color: rgba(0, 0, 0, 0.8);\n    }\n\n    .grid_container>div {\n        border: 1px solid rgb(168, 168, 168);\n        text-align: center;\n        border-radius: 5x;\n    }\n\n    .card {\n        position: relative;\n        width: 290px;\n        height: 70px;\n        box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);\n        border: 1px solid rgba(140, 140, 140, .5);       \n        background-color: #FFFFFF;\n        background-color: rgb(100, 100, 100);\n        color: black;\n        transition: 0.3s;\n        border-radius: 5px;\n        padding-top: 5px;\n    }\n\n    #cards_container {\n        display: box;\n        position: absolute;\n        top: 0px;\n        width: 100%;\n        height: 100%; \n        left: 50%;\n        transform: translate(-50%, 0%);\n        background-color: rgba(0, 0, 0, 0.8);\n    }\n\n\n    .div_nome {\n        text-align: left;\n        padding-left: 5px;\n        width: 195px;\n        font-weight: bold;\n        font-size: 14px;\n    }\n\n\n    .card:hover {\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n        cursor: pointer;\n    }\n\n\n    .text_container {\n        position: relative;\n        font-size: 12px;\n        width: 98%;\n    }\n\n\n    #tab_energia td {\n        padding: 0px;\n        font-size: 12px;\n    }\n\n    #tbl_hist_clk th {\n        border: none;\n    }\n\n    /*#svg_configurations path{\n        fill: none;\n        stroke: lightgray;\n    }*/\n\n    #svg_configurations circle {\n        fill: none;\n        stroke: lightgray;\n    }\n\n\n    .div_img {\n        position: relative;\n        border-radius: 50%;\n        padding: 2px;\n        width: 35px;\n        height: 35px;\n        margin-right: 10px;\n        margin-left: 10px;\n        /*box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);\n    box-shadow: 2px 2px 12px 1px rgba(255, 234, 32, .5);*/\n    }\n\n    /*----------------------- CONFIGURAÇÔES --------------------------*/\n    #div_cfg_panel {\n        /*position: fixed;\n    display: box; \n    width: 295px;\n    height: 140px;\n    background-color: rgba(0, 0, 0, 0.8);*/\n    }\n</style>\n\n<!-- DIV que contem os Dispositivos -->\n<div id=\"cards_container\"></div>\n\n\n<!-- DIV/Pauinel para configuracoes -->\n<div id=\"div_cfg_panel\"></div>\n\n<script>\n    (function(scope) {     \n\n        //////////////////////\n        // Documento pronto //\n        //////////////////////\n        $(document).ready(function () {   \n       \n        });\n\n\n\n        // TDOD: Passar IP por via de varivel global\n        /*var socket = new WebSocket(\"ws://192.168.0.5:1880/ws/ui\");\n\n        //////////////////////////////////////////////\n        // Processar dados recebidos pelo WebSocket //\n        //////////////////////////////////////////////\n        socket.onmessage = function(e) {\n            const objjson = JSON.parse(e.data);\n            \n            // Alterar cor da lampada\n            if(objjson.Estado == \"ON\"){\n                alterar_cor_lamp(objjson.Id+ 'a2', 'yellow');\n            }\n            else if(objjson.Estado == \"OFF\"){\n                alterar_cor_lamp(objjson.Id+ 'a2', 'lightgray');\n            }\n        };*/\n\n\n\n        ////////////////////////\n        // Classe Dispositivo //\n        ////////////////////////\n        class Dispositivo {        \n            constructor(id, nome, img) {\n                this.Id = id;\n                this.Nome = nome;\n                this.Img = img;\n            }  \n        }\n\n\n        /////////////////\n        // Imagens SVG //\n        /////////////////    \n        const svg_clock = '<svg class=\"svg_clk\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline></svg>';\n        const img_lampada = '<svg id=\"svg_lamp\" viewBox=\"-80 0 512 512\"><path d=\"M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z\" /></svg>';\n        \n        let cards_container = document.getElementById('cards_container');\n        const historico = '00:00:00, 00/00/0000';\n\n        scope.$watch('msg.payload', function(msg) {           \n            if (Array.isArray(msg)) { // Se for array  \n\n                for(var cont = 0; cont < msg.length; cont++){\n                    // Cria os dispositivos\n                    const objdev = new Dispositivo(msg[cont].ieeeAddress, msg[cont].friendlyName, img_lampada);\n                    // Criar card, se nao existe na DOM \n                    if (document.getElementById(msg[cont].ieeeAddress + 'a0')) {\n                        continue;\n                    } else {\n                        criar_device(objdev);\n                    }                                        \n                }                   \n            } \n            else if (typeof msg === 'object' && msg !== null && !Array.isArray(msg)){  \n                // Seleciona o elemento pelo ID\n                const elemento = document.getElementById(msg.Id + 'a2');\n\n                // Alterar cor da lampada\n                if(msg.Estado == \"ON\"){\n                    alterar_cor_lamp(msg.Id + 'a2', '#FFEA20');\n                    // Define o novo valor para a propriedade box-shadow\n                    elemento.style.boxShadow = \"2px 2px 12px 1px rgba(255, 234, 32, .5)\";\n                }\n                else  if(msg.Estado == \"OFF\"){\n                    alterar_cor_lamp(msg.Id  + 'a2', 'lightgray');  \n                    // Define o novo valor para a propriedade box-shadow\n                    elemento.style.boxShadow = \"2px 2px 12px 1px rgba(140, 140, 140, .5)\";\n                }          \n            }\n                       \n        });// FIM de scope.$watch('msg.payload', function(msg) \n       \n    \n        \n        ///////////////////////////////////\n        // Funcao para cria dispositivos //\n        ///////////////////////////////////\n        function criar_device(device){  \n\n            if (device instanceof Dispositivo) {\n                \n                const envoltura_card = `                                   \n                    <div id=${device.Id + 'a1'} class=\"card\" style=\"display: block;\">                       \n                    <div class=\"text_container\">\n                        <table id=\"tbl_hist_clk\">\n                            <tr>\n                                <th rowspan=\"3\">\n                                    <div class=\"div_img\" id=${device.Id + 'a2'} >${device.Img}</div>\n                                </th>\n                            </tr>\n                \n                            <tr>\n                                <td>\n                                    <div class=\"div_nome\" id=\"div_nome\">${device.Nome}</div>\n                                </td>\n                                <td>\n                                    <div id=\"div_configurations\">\n                                        <svg id=\"svg_configurations\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\"\n                                            stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                            <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n                                            <circle cx=\"12\" cy=\"5\" r=\"1\"></circle>\n                                            <circle cx=\"12\" cy=\"19\" r=\"1\"></circle>\n                                        </svg>\n                                    </div>\n                                </td>\n                            </tr>\n                \n                            <tr id=\"tr_historico\">\n                                <td>\n                                    <div class=\"div_img_clk\" id=\"\" onclick=\"\">${svg_clock}</div>\n                                </td>\n                                <td>\n                                    <div class=\"div_historico\" id=\"div_historico\">${historico}</div>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>`;\n                \n                // Cria DIV envoltura da Card\n                var div = document.createElement(\"div\");\n                div.innerHTML = envoltura_card;\n                div.id = device.Id + 'a0';\n                div.classList.add(\"grid_container\");               \n                cards_container.appendChild(div);\n\n                // Evento Listner da DIV envoltura da Card\n                div.addEventListener(\"click\", function() {\n                    //alert(device.Id);\n                });\n\n\n                // Adiciona o event listener de clique a div configuracoes                \n                const divcfg = document.getElementById('div_configurations');\n                divcfg.addEventListener('contextmenu', function(event) {\n                    // Evita que o menu de contexto padrão do navegador seja exibido\n                    event.preventDefault();                 \n                \n                    //alert('Clique com o botão direito detectado!');\n                    var grupo1 = document.querySelector('[node-id=\"e0d7e8f2b4221096\"]');\n                    var grupo = document.querySelector('[node-id=\"2b8b535d0f438db2\"]'); // Node-id do grupo 'Configurações'\n                    if(grupo) {\n                        //grupo.style.display = \"none\"; // Oculta o grupo                       \n                    }\n\n                   \n                    if (grupo1) {\n                        // Move o grupo para o primeiro lugar dentro do pai (geralmente a seção do dashboard)\n                        //grupo.parentNode.prepend(grupo1);\n                        //grupo1.style.display = \"block\"; // Oculta o grupo                    \n                    }\n           \n                });\n              \n               \n                // Adiciona o event listener de clique a div da imagem\n                var divimg = document.getElementById(device.Id + 'a2');                  \n                divimg.addEventListener(\"click\", function() {\n                    // Dados a serem enviados para o fluxo/flow\n                    var mensagem = {\n                        id:device.Id,\n                        state:\"TOGGLE\"\n                    };      \n                    // Enviar os dados ao fluxo/flow\n                    scope.send({ payload: JSON.stringify(mensagem) });                    \n                });\n\n                // Altera cor da imagem svg\n                alterar_cor_lamp(device.Id + 'a2', 'lightgray');  \n\n\n                // Ajustar altura cards_container\n                var contentor_cards = document.getElementById('cards_container');\n                var painel_iluminacao = document.querySelector('[node-id=\"2b8b535d0f438db2\"]');\n                // Atribui a altura do primeiro elemento ao segundo\n                // (*J*) 68.9931 => Obtido ao inspecionar o elemento com id = \"Tab_Dashboard\", style=\"min-height: 68.9931px;\"\n                contentor_cards.style.height =(painel_iluminacao.offsetHeight - 68.9931) + 'px';\n\n                \n            }// FIM do if (device instanceof Dispositivo)\n\n        }// FIM de function criar_device(device)\n        \n\n        /////////////////////////\n        // Alterar cor lampada //\n        /////////////////////////\n        function alterar_cor_lamp(Id, Cor){  \n            // Alterar propriedade 'fill' do svg com id = svg_lamp  dentro da div con id = Id          \n            $(`#${Id}  #svg_lamp path`).css(\"fill\", Cor); \n\n            // Botao configuracoes\n            /*$(`#svg_config path`).css(\"stroke\", \"#000000\");\n            $(`#svg_config path`).css(\"fill\", \"none\");*/\n        }\n       \n\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "fe321b77.50b858",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Format Data",
        "func": "var groupname = flow.get('groupname');\nvar device = flow.get('device');\n\nif (typeof groupname !== undefined && typeof device !== undefined) {\n    var action = \"Adding \";\n    var what = \" to group \";\n    if(msg.payload == \"remove\") {\n        action = \"Removing \";\n        what = \" from group \";\n    }\nvar msg1 = { payload: device, topic: \"zigbee2mqtt/bridge/group/\" + groupname + \"/\" + msg.payload};\nvar msg2 = { payload: action + \" \" + device + what + groupname };\n\nreturn [msg1, msg2];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 770,
        "y": 1920,
        "wires": [
            [
                "67f130eb.efef3"
            ],
            [
                "89490386.cf438"
            ]
        ]
    },
    {
        "id": "22d38d69.8b8e12",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "38009ddc.858562",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Add to group",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Add",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 1900,
        "wires": [
            [
                "463d3907.451408"
            ]
        ]
    },
    {
        "id": "89490386.cf438",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "System Notification",
        "name": "",
        "x": 810,
        "y": 1980,
        "wires": []
    },
    {
        "id": "d7c7c87a.3b1e58",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "Group management",
        "info": "",
        "x": 130,
        "y": 1460,
        "wires": []
    },
    {
        "id": "fae942d1.d6e91",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Format Data",
        "func": "var srcdev = flow.get('device');\nvar bindtarget = flow.get('bindtarget');\n\nif (typeof srcdev !== undefined && typeof bindtarget !== undefined) {\n  msg1 = { 'payload': bindtarget, 'topic': 'zigbee2mqtt/bridge/' + msg.payload + '/' + srcdev};\n  msg2 = { 'payload': msg.payload + ' ' + srcdev + ' to target ' + bindtarget };\n\n  return [msg1, msg2];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 750,
        "y": 2260,
        "wires": [
            [
                "bf8faaff.5215b8"
            ],
            [
                "a7b346c6.0c9d18"
            ]
        ]
    },
    {
        "id": "a29bad1b.88ab",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "38009ddc.858562",
        "order": 13,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Bind device",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Bind",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 2240,
        "wires": [
            [
                "4d02aaf3.2fbb24"
            ]
        ]
    },
    {
        "id": "1352a9c5.0a7b96",
        "type": "mqtt in",
        "z": "1112a3ea.54efdc",
        "name": "",
        "topic": "zigbee2mqtt/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 100,
        "wires": [
            [
                "5564a681.f2b1d8"
            ]
        ]
    },
    {
        "id": "a600ffb3.fdd1b",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "log type",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "devices",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "groups",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zigbee_publish_error",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "dc9da24.290da6"
            ],
            [
                "9cce1a99.a33f28"
            ],
            [
                "a4e5b5d9.2c3e88"
            ],
            [
                "e3b7ead2.4ac6f8"
            ]
        ]
    },
    {
        "id": "ba524055.a6136",
        "type": "json",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "a600ffb3.fdd1b"
            ]
        ]
    },
    {
        "id": "dc9da24.290da6",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M LOG DEVICELIST",
        "links": [
            "28c00ddc.4dea62",
            "94e9b5e4.4a4158"
        ],
        "x": 695,
        "y": 500,
        "wires": []
    },
    {
        "id": "87ab5849.f09d28",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Reformat for list",
        "func": "let newPayload = [];\nmsg.payload.message.forEach(function(entry) {\n    if(entry.type != 'Coordinator') {\n      let newentry = {'title': entry.friendly_name, \n               'description': entry.model + ' (' + entry.ieeeAddr + ')',\n               'icon': 'https://www.zigbee2mqtt.io/images/devices/' + entry.model.replace(new RegExp('/', 'g'), '-') + '.jpg'\n      };\n      newPayload.push(newentry);\n    }\n});\n\nmsg.payload=newPayload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 920,
        "wires": [
            [
                "6c06b987.6f7098"
            ]
        ]
    },
    {
        "id": "28c00ddc.4dea62",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M DEV LIST INPUT",
        "links": [
            "dc9da24.290da6"
        ],
        "x": 55,
        "y": 940,
        "wires": [
            [
                "87ab5849.f09d28",
                "f3505bcc.2352d8"
            ]
        ]
    },
    {
        "id": "9fa73b15.846b38",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "flow",
                "to": "payload.title",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 960,
        "wires": [
            [
                "1a63fe7a.9d0142",
                "4b968044.ca533",
                "4d2d1114.f6adf"
            ]
        ]
    },
    {
        "id": "ab86c3a1.ed149",
        "type": "mqtt out",
        "z": "1112a3ea.54efdc",
        "name": "Generic output",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 420,
        "y": 160,
        "wires": []
    },
    {
        "id": "398af7a3.80e388",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M GENERIC MQTT OUT",
        "links": [
            "67f130eb.efef3",
            "3b86e8ee.a04ed8",
            "632c3105.5495f",
            "bf8faaff.5215b8",
            "75d20744.52cef8",
            "207b74ec.1d3f1c",
            "699fc636.402658"
        ],
        "x": 55,
        "y": 160,
        "wires": [
            [
                "ab86c3a1.ed149"
            ]
        ]
    },
    {
        "id": "67f130eb.efef3",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M GROUP BIND OUT",
        "links": [
            "398af7a3.80e388"
        ],
        "x": 875,
        "y": 1900,
        "wires": []
    },
    {
        "id": "f3505bcc.2352d8",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "devices",
                "pt": "flow",
                "to": "payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "1a63fe7a.9d0142",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Lookup device details",
        "func": "devices = flow.get('devices');\n\nfor (var i in devices) {\n    if(devices[i].friendly_name == msg.payload.title) {\n        flow.set('seldevice_details', devices[i]);\n        msg.payload = devices[i];\n        return msg;\n    }\n}\n\nmsg.payload.friendly_name='unknown';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 960,
        "wires": [
            [
                "46646ab3.510094"
            ]
        ]
    },
    {
        "id": "9de0998d.8b3668",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Reformat for dropdown",
        "func": "newPayload = [];\nmsg.payload.message.forEach(function(entry) {\n    newPayload.push(entry.friendly_name);\n});\n\nnewMsg = {'payload': flow.get('bindtarget'), 'options': newPayload};\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 2180,
        "wires": [
            [
                "ce73ad6f.0b69"
            ]
        ]
    },
    {
        "id": "94e9b5e4.4a4158",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M BIND LIST INPUT",
        "links": [
            "dc9da24.290da6"
        ],
        "x": 55,
        "y": 2180,
        "wires": [
            [
                "9de0998d.8b3668"
            ]
        ]
    },
    {
        "id": "ce73ad6f.0b69",
        "type": "ui_dropdown",
        "z": "1112a3ea.54efdc",
        "name": "",
        "label": "Target device",
        "tooltip": "",
        "place": "Select target device",
        "group": "38009ddc.858562",
        "order": 12,
        "width": "6",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 410,
        "y": 2180,
        "wires": [
            [
                "74886cbc.2a0f14"
            ]
        ]
    },
    {
        "id": "74886cbc.2a0f14",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bindtarget",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "c1eb42c4.f454a",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "",
        "repeat": "6",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "ba7821e1.93e46"
            ]
        ]
    },
    {
        "id": "260ce836.2e4f98",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bridgestate",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "450f3b02.985824",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "38009ddc.858562",
        "order": 10,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Remove from group",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Remove",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 1940,
        "wires": [
            [
                "3b260768.9d2d38"
            ]
        ]
    },
    {
        "id": "14507948.bc92c7",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "38009ddc.858562",
        "order": 14,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Unbind device",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Unbind",
        "payloadType": "str",
        "topic": "",
        "x": 120,
        "y": 2280,
        "wires": [
            [
                "2862cc.8a6c4d34"
            ]
        ]
    },
    {
        "id": "463d3907.451408",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}} device <b>{{flow.device}}</b> in group <b>{{flow.groupname}}</b>?",
        "output": "str",
        "x": 320,
        "y": 1900,
        "wires": [
            [
                "d1c4f87f.dbce28"
            ]
        ]
    },
    {
        "id": "d1c4f87f.dbce28",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "add",
        "cancel": "cancel",
        "topic": "Add to group",
        "name": "",
        "x": 470,
        "y": 1900,
        "wires": [
            [
                "b7ebccd6.217c7"
            ]
        ]
    },
    {
        "id": "b7ebccd6.217c7",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "add",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "remove",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancel",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 1920,
        "wires": [
            [
                "fe321b77.50b858"
            ],
            [
                "fe321b77.50b858"
            ],
            []
        ]
    },
    {
        "id": "3b260768.9d2d38",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}} device <b>{{flow.device}}</b> in group <b>{{flow.groupname}}</b>?",
        "output": "str",
        "x": 320,
        "y": 1940,
        "wires": [
            [
                "99104ccd.a2827"
            ]
        ]
    },
    {
        "id": "99104ccd.a2827",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "remove",
        "cancel": "cancel",
        "topic": "Remove from group",
        "name": "",
        "x": 470,
        "y": 1940,
        "wires": [
            [
                "b7ebccd6.217c7"
            ]
        ]
    },
    {
        "id": "4d02aaf3.2fbb24",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}} device <b>{{flow.device}}</b> to <b>{{flow.bindtarget}}</b>?",
        "output": "str",
        "x": 280,
        "y": 2240,
        "wires": [
            [
                "28efb09d.6d9cb"
            ]
        ]
    },
    {
        "id": "28efb09d.6d9cb",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "bind",
        "cancel": "cancel",
        "topic": "Bind device",
        "name": "",
        "x": 430,
        "y": 2240,
        "wires": [
            [
                "5f4235aa.d48c2c"
            ]
        ]
    },
    {
        "id": "2862cc.8a6c4d34",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}} device <b>{{flow.device}}</b> from <b>{{flow.bindtarget}}</b>?",
        "output": "str",
        "x": 280,
        "y": 2280,
        "wires": [
            [
                "b41dcb39.fffc48"
            ]
        ]
    },
    {
        "id": "b41dcb39.fffc48",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "unbind",
        "cancel": "cancel",
        "topic": "Unbind device",
        "name": "",
        "x": 430,
        "y": 2280,
        "wires": [
            [
                "5f4235aa.d48c2c"
            ]
        ]
    },
    {
        "id": "5f4235aa.d48c2c",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "bind",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unbind",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancel",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 590,
        "y": 2260,
        "wires": [
            [
                "fae942d1.d6e91"
            ],
            [
                "fae942d1.d6e91"
            ],
            []
        ]
    },
    {
        "id": "af2bd47b.bb43c8",
        "type": "ui_text_input",
        "z": "1112a3ea.54efdc",
        "name": "",
        "label": "New device name",
        "tooltip": "",
        "group": "38009ddc.858562",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "x": 130,
        "y": 1860,
        "wires": [
            [
                "740e14d9.a5ad0c"
            ]
        ]
    },
    {
        "id": "67a03950.a9be58",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "Device management",
        "info": "",
        "x": 130,
        "y": 1740,
        "wires": []
    },
    {
        "id": "740e14d9.a5ad0c",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newdevicename",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "3f245891.878948",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "38009ddc.858562",
        "order": 6,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Rename device",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Rename",
        "payloadType": "str",
        "topic": "",
        "x": 120,
        "y": 2080,
        "wires": [
            [
                "16376b86.70cdb4"
            ]
        ]
    },
    {
        "id": "16376b86.70cdb4",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}} device <b>{{flow.device}}</b> to <b>{{flow.newdevicename}}</b>?",
        "output": "str",
        "x": 280,
        "y": 2080,
        "wires": [
            [
                "1c5b4126.8d8daf"
            ]
        ]
    },
    {
        "id": "1c5b4126.8d8daf",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "rename",
        "cancel": "cancel",
        "topic": "Rename device",
        "name": "",
        "x": 430,
        "y": 2080,
        "wires": [
            [
                "c65c2cb3.8fafb"
            ]
        ]
    },
    {
        "id": "c65c2cb3.8fafb",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rename",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancel",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 2080,
        "wires": [
            [
                "6a0ab4e.825834c"
            ],
            []
        ]
    },
    {
        "id": "6a0ab4e.825834c",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Format Data",
        "func": "var oldname = flow.get('device');\nvar newname = flow.get('newdevicename');\n\nif (typeof oldname !== undefined && typeof newname !== undefined) {\n  msg1 = { 'payload': {\"old\": oldname, \"new\": newname}, 'topic': 'zigbee2mqtt/bridge/config/rename'};\n  msg2 = { 'payload': msg.payload + ' ' + oldname + ' to ' + newname };\n\n  return [msg1, msg2];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 730,
        "y": 2080,
        "wires": [
            [
                "75d20744.52cef8"
            ],
            [
                "6c972cc3.1c1ce4"
            ]
        ]
    },
    {
        "id": "6c972cc3.1c1ce4",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "System Notification",
        "name": "",
        "x": 790,
        "y": 2140,
        "wires": []
    },
    {
        "id": "6d78e825.7722f8",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": ".*/bridge/state",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": ".*/bridge/log",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": ".*/bridge/config$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": ".*/networkmap/graphviz$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": ".*/bridge/config/.*",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^(?!.*get$|.*set$).*$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 230,
        "y": 540,
        "wires": [
            [
                "260ce836.2e4f98"
            ],
            [
                "ba524055.a6136"
            ],
            [
                "3d8a0b9a.aa0504"
            ],
            [
                "162ed5bf.58dd8a"
            ],
            [],
            [
                "d3fbf1d9.d4525"
            ]
        ]
    },
    {
        "id": "3d8a0b9a.aa0504",
        "type": "json",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "619cfbc2.0293b4"
            ]
        ]
    },
    {
        "id": "619cfbc2.0293b4",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M BRIDGE CONFIG INPUT",
        "links": [
            "d983172a.616bc8"
        ],
        "x": 515,
        "y": 620,
        "wires": []
    },
    {
        "id": "61a80af8.34eb64",
        "type": "ui_switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "label": "Permit join",
        "tooltip": "",
        "group": "d40979a3.d11a08",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "zigbee2mqtt/bridge/config/permit_join",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "3b86e8ee.a04ed8"
            ]
        ]
    },
    {
        "id": "aef8aa15.a42ce8",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.permit_join",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1280,
        "wires": [
            [
                "61a80af8.34eb64"
            ]
        ]
    },
    {
        "id": "d983172a.616bc8",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M BRIDGE CONFIG",
        "links": [
            "619cfbc2.0293b4"
        ],
        "x": 55,
        "y": 1280,
        "wires": [
            [
                "aef8aa15.a42ce8",
                "67251463.751fec",
                "be14f64d.ceb358",
                "56f299a2.6327d8"
            ]
        ]
    },
    {
        "id": "2efc8bac.a29ab4",
        "type": "ui_dropdown",
        "z": "1112a3ea.54efdc",
        "name": "",
        "label": "Log level",
        "tooltip": "",
        "place": "Select log level",
        "group": "d40979a3.d11a08",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Info",
                "value": "info",
                "type": "str"
            },
            {
                "label": "Debug",
                "value": "debug",
                "type": "str"
            },
            {
                "label": "Warn",
                "value": "warn",
                "type": "str"
            },
            {
                "label": "Error",
                "value": "error",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "zigbee2mqtt/bridge/config/log_level",
        "x": 460,
        "y": 1320,
        "wires": [
            [
                "3b86e8ee.a04ed8"
            ]
        ]
    },
    {
        "id": "3b86e8ee.a04ed8",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M BRIDGE CONFIG OUT",
        "mode": "link",
        "links": [
            "398af7a3.80e388"
        ],
        "x": 615,
        "y": 1300,
        "wires": []
    },
    {
        "id": "67251463.751fec",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.log_level",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1320,
        "wires": [
            [
                "2efc8bac.a29ab4"
            ]
        ]
    },
    {
        "id": "e3b7ead2.4ac6f8",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M NOTIFICATIONS OUT",
        "links": [
            "71034afb.6773f4"
        ],
        "x": 695,
        "y": 600,
        "wires": []
    },
    {
        "id": "b2123a08.a7deb8",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 840,
        "y": 2600,
        "wires": []
    },
    {
        "id": "71034afb.6773f4",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M NOTIFICATIONS INPUT",
        "links": [
            "e3b7ead2.4ac6f8"
        ],
        "x": 65,
        "y": 2580,
        "wires": [
            [
                "f24e73c5.e5cad"
            ]
        ]
    },
    {
        "id": "7d4fa71c.1ec908",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.type",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.message",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "b2123a08.a7deb8"
            ]
        ]
    },
    {
        "id": "7475bcd5.f978c4",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "Bridge status",
        "info": "",
        "x": 110,
        "y": 1100,
        "wires": []
    },
    {
        "id": "99d65db9.18641",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "remove device",
        "group": "38009ddc.858562",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Remove device",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "remove",
        "payloadType": "str",
        "topic": "",
        "x": 120,
        "y": 1820,
        "wires": [
            [
                "d0e1401d.17d42"
            ]
        ]
    },
    {
        "id": "d0e1401d.17d42",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}} device <b>{{flow.device}}</b> permanently?",
        "output": "str",
        "x": 280,
        "y": 1820,
        "wires": [
            [
                "215d69ec.df3ec6"
            ]
        ]
    },
    {
        "id": "215d69ec.df3ec6",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "remove",
        "cancel": "cancel",
        "topic": "Remove device",
        "name": "",
        "x": 430,
        "y": 1820,
        "wires": [
            [
                "cc05901d.7d2bb"
            ]
        ]
    },
    {
        "id": "cc05901d.7d2bb",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "remove",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancel",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 1820,
        "wires": [
            [
                "d44c81f5.d4712"
            ],
            []
        ]
    },
    {
        "id": "d44c81f5.d4712",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "zigbee2mqtt/bridge/config/remove",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "device",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1820,
        "wires": [
            [
                "207b74ec.1d3f1c"
            ]
        ]
    },
    {
        "id": "4fe45eac.983e",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "d40979a3.d11a08",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Status",
        "format": "{{msg.payload.bridgestate}}",
        "layout": "row-left",
        "x": 510,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d36f839f.5fd8a",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "d40979a3.d11a08",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Devices",
        "format": "{{msg.payload.numdevices}}",
        "layout": "row-left",
        "x": 520,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ba7821e1.93e46",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.numdevices",
                "pt": "msg",
                "to": "devices.length",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.bridgestate",
                "pt": "msg",
                "to": "bridgestate",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.nwlast",
                "pt": "msg",
                "to": "networkmap_last",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1140,
        "wires": [
            [
                "d36f839f.5fd8a",
                "4fe45eac.983e",
                "7e27d95b.8f7028"
            ]
        ]
    },
    {
        "id": "46646ab3.510094",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Reformat for details",
        "func": "newPayload = [];\n\nnewentry = {\n             'title': msg.payload.friendly_name,\n             'description': 'zigbee2mqtt/' + msg.payload.friendly_name,\n             'icon': 'https://www.zigbee2mqtt.io/images/logo.png'\n};\nnewPayload.push(newentry);\nnewentry = {\n             'title': msg.payload.ieeeAddr,\n             'description': 'NwkAddr: ' + msg.payload.nwkAddr + ' / manufId: ' + msg.payload.manufId,\n             'icon_name': 'settings_input_antenna'\n};\nnewPayload.push(newentry);\nnewentry = { \n             'title': msg.payload.model,\n             'description': msg.payload.modelId,\n             'icon': 'https://www.zigbee2mqtt.io/images/devices/' + msg.payload.model.replace(new RegExp('/', 'g'), '-') + '.jpg'\n};\nnewPayload.push(newentry);\nnewentry = { \n             'title': msg.payload.manufName,\n             'description': 'HW: ' + msg.payload.hwVersion + ' / SW: ' + msg.payload.swBuildId,\n             'icon_name': 'bookmark'\n};\nnewPayload.push(newentry);\nvar type_icon = msg.payload.type=='Router' ? 'device_hub' : 'input';\nnewentry = {\n             'title': msg.payload.type,\n             'description': 'Powersource: ' + msg.payload.powerSource,\n             'icon_name': type_icon\n};\nnewPayload.push(newentry);\n\nmsg.payload=newPayload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1020,
        "wires": [
            [
                "2694bda5.0e1732"
            ]
        ]
    },
    {
        "id": "162ed5bf.58dd8a",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "save networkmap",
        "rules": [
            {
                "t": "set",
                "p": "networkmap",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "networkmap_last",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 680,
        "wires": [
            [
                "9596b7ff.dac428"
            ]
        ]
    },
    {
        "id": "5857ba56.3a5444",
        "type": "http in",
        "z": "1112a3ea.54efdc",
        "name": "",
        "url": "/z2mpanel/networkmap",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 3080,
        "wires": [
            [
                "368af09e.feec5"
            ]
        ]
    },
    {
        "id": "368af09e.feec5",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "Render page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n        <meta charset=\"utf-8\">\n        <title>Network topology</title>\n         <style>\n    #graphviz_svg_div svg {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    \n    </style>\n    </head>\n    <body>\n        <div id=\"graphviz_svg_div\"></div>\n        <script language=\"javascript\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/viz.js@2.1.2/viz.js\"></script>\n        <script language=\"javascript\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/viz.js@2.1.2/full.render.js\"></script>\n        <script language=\"javascript\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/svg-pan-zoom@3.6.0/dist/svg-pan-zoom.min.js\"></script>\n        <script type=\"bogus\" id=\"graphviz_input\">\n            {{{flow.networkmap}}}\n        </script>\n        <script language=\"javascript\" type=\"text/javascript\">\n            document.addEventListener(\"DOMContentLoaded\", function(event) {\n            var viz = new Viz();\n            var svg = document.getElementById(\"graphviz_input\").innerHTML;\n            viz.renderSVGElement(svg, {engine: \"{{{flow.nwrenderengine}}}\"})\n            .then(function(element) {\n                document.getElementById(\"graphviz_svg_div\").appendChild(element);\n                panZoom = svgPanZoom(element, {\n                    zoomEnabled: true,\n                    controlIconsEnabled: true,\n                    fit: true,\n                    center: true,\n                    minZoom: 0.1\n                });\n\n                element.addEventListener('paneresize', function(e) {\n                    panZoom.resize();\n                }, false);\n                window.addEventListener('resize', function(e) {\n                    panZoom.resize();\n                });\n            })\n            .catch(error => {\n                // Create a new Viz instance (@see Caveats page for more info)\n                viz = new Viz();\n\n                // Possibly display the error\n                console.error(error);\n            });\n            //var svg = Viz(document.getElementById(\"graphviz_input\").innerHTML, \"svg\", {render: \"circo\"});\n            //document.getElementById(\"graphviz_svg_div\").innerHTML = svg;\n            });\n        </script>\n    </body>\n</html>",
        "output": "str",
        "x": 450,
        "y": 3080,
        "wires": [
            [
                "65139275.6e325c"
            ]
        ]
    },
    {
        "id": "65139275.6e325c",
        "type": "http response",
        "z": "1112a3ea.54efdc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 3080,
        "wires": []
    },
    {
        "id": "2ba4c4f9.de559c",
        "type": "ui_template",
        "z": "1112a3ea.54efdc",
        "group": "fd4925c4.d13458",
        "name": "iframe nw map",
        "order": 0,
        "width": "27",
        "height": "11",
        "format": "<iframe frameborder=\"0\" width=\"100%\" height=\"100%\" src=\"/z2mpanel/networkmap\"></iframe>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "5821943.e8f1e6c",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "Device list & selected device",
        "info": "",
        "x": 160,
        "y": 880,
        "wires": []
    },
    {
        "id": "202259f7.b7a9c6",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "Create network map",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "10",
        "topic": "zigbee2mqtt/bridge/networkmap",
        "payload": "graphviz",
        "payloadType": "str",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "ab86c3a1.ed149"
            ]
        ]
    },
    {
        "id": "dcf15903.6ff8e8",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "Request Device List",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "zigbee2mqtt/bridge/config/devices/get",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "ab86c3a1.ed149"
            ]
        ]
    },
    {
        "id": "62a2e5be.e305bc",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "Create nw map",
        "group": "d40979a3.d11a08",
        "order": 12,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "Refresh network map",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "graphviz",
        "payloadType": "str",
        "topic": "zigbee2mqtt/bridge/networkmap",
        "x": 120,
        "y": 2880,
        "wires": [
            [
                "632c3105.5495f"
            ]
        ]
    },
    {
        "id": "632c3105.5495f",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M NW MAP GEN",
        "links": [
            "398af7a3.80e388"
        ],
        "x": 255,
        "y": 2880,
        "wires": []
    },
    {
        "id": "f24e73c5.e5cad",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "pairing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_connected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_removed",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "object",
                "vt": "object"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 160,
        "y": 2580,
        "wires": [
            [
                "1e0e2fff.2eee5"
            ],
            [
                "eaaa0045.a639"
            ],
            [
                "51ff0ea1.0a919"
            ],
            [
                "8ae66b7.1c0af98"
            ],
            [
                "7d4fa71c.1ec908"
            ]
        ]
    },
    {
        "id": "1e0e2fff.2eee5",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload.message",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connecting with device",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device incoming",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 2480,
        "wires": [
            [
                "2d86241a.ba284c"
            ],
            [
                "7fc722db.eb28ac"
            ]
        ]
    },
    {
        "id": "2d86241a.ba284c",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "A device is attempting to pair...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 2460,
        "wires": [
            [
                "b2123a08.a7deb8"
            ]
        ]
    },
    {
        "id": "7fc722db.eb28ac",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "A device is incoming or repairing...",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 2500,
        "wires": [
            [
                "b2123a08.a7deb8"
            ]
        ]
    },
    {
        "id": "eaaa0045.a639",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Device paired successfully: {{msg.payload.message}}",
        "output": "str",
        "x": 330,
        "y": 2540,
        "wires": [
            [
                "b2123a08.a7deb8"
            ]
        ]
    },
    {
        "id": "51ff0ea1.0a919",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Deviced removed: {{msg.payload.message}}",
        "output": "str",
        "x": 330,
        "y": 2580,
        "wires": [
            [
                "b2123a08.a7deb8"
            ]
        ]
    },
    {
        "id": "61db4308.05a59c",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "Notifications",
        "info": "",
        "x": 120,
        "y": 2420,
        "wires": []
    },
    {
        "id": "a7b346c6.0c9d18",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "System Notification",
        "name": "",
        "x": 790,
        "y": 2320,
        "wires": []
    },
    {
        "id": "bf8faaff.5215b8",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M BINDING OUT",
        "links": [
            "398af7a3.80e388"
        ],
        "x": 875,
        "y": 2240,
        "wires": []
    },
    {
        "id": "75d20744.52cef8",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M RENAME OUT",
        "links": [
            "398af7a3.80e388"
        ],
        "x": 855,
        "y": 2060,
        "wires": []
    },
    {
        "id": "207b74ec.1d3f1c",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M REMOVE OUT",
        "links": [
            "398af7a3.80e388"
        ],
        "x": 835,
        "y": 1820,
        "wires": []
    },
    {
        "id": "6e76defe.80e97",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "Zigbee2Mqtt Admin Panel",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "638e5203.cd6f8c",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "---- Dont change things down here ----",
        "info": "",
        "x": 190,
        "y": 400,
        "wires": []
    },
    {
        "id": "8ae66b7.1c0af98",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload.type.group",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 2620,
        "wires": [
            [
                "587b2872.f7c9c8"
            ]
        ]
    },
    {
        "id": "587b2872.f7c9c8",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Succesfully changed device {{payload.type.device}} in group {{payload.type.group}}",
        "output": "str",
        "x": 570,
        "y": 2620,
        "wires": [
            [
                "b2123a08.a7deb8"
            ]
        ]
    },
    {
        "id": "cd065e2e.3e334",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 880,
        "y": 640,
        "wires": []
    },
    {
        "id": "9596b7ff.dac428",
        "type": "debug",
        "z": "1112a3ea.54efdc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 650,
        "y": 680,
        "wires": []
    },
    {
        "id": "7e27d95b.8f7028",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "d40979a3.d11a08",
        "order": 9,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last created",
        "format": "{{msg.payload.nwlast | date:'dd.MM.yy HH:mm'}}",
        "layout": "row-spread",
        "x": 530,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d0f962f1.6e1fd",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "d40979a3.d11a08",
        "order": 11,
        "width": "5",
        "height": "1",
        "passthru": false,
        "label": "Show network map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"Z2M Network map\"}",
        "payloadType": "json",
        "topic": "",
        "x": 130,
        "y": 2920,
        "wires": [
            [
                "d64445e4.511f88"
            ]
        ]
    },
    {
        "id": "d64445e4.511f88",
        "type": "ui_ui_control",
        "z": "1112a3ea.54efdc",
        "name": "",
        "x": 340,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "4b968044.ca533",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M FLOW DEV TRIGGER",
        "mode": "link",
        "links": [
            "d8fc6e0f.d831c"
        ],
        "x": 475,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5bdeb97.e5ea048",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "4b968044.ca533"
            ]
        ]
    },
    {
        "id": "a4e5b5d9.2c3e88",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload.message}} to device {{payload.meta.entity.friendlyName}}\nOriginal message: {{payload.meta.message}}",
        "output": "str",
        "x": 780,
        "y": 580,
        "wires": [
            [
                "cd065e2e.3e334",
                "aab0241a.1dabd8"
            ]
        ]
    },
    {
        "id": "aab0241a.1dabd8",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "PUBLISH ERROR TO TELEGRAM",
        "links": [],
        "x": 895,
        "y": 560,
        "wires": []
    },
    {
        "id": "d595fafe.6834b8",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "Request Group List",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "zigbee2mqtt/bridge/config/groups",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "ab86c3a1.ed149"
            ]
        ]
    },
    {
        "id": "9cce1a99.a33f28",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M LOG GROUPLIST",
        "links": [
            "b259a6a5.f45d38",
            "a5f793a4.b6462"
        ],
        "x": 695,
        "y": 540,
        "wires": []
    },
    {
        "id": "1109a698.6fc9c9",
        "type": "comment",
        "z": "1112a3ea.54efdc",
        "name": "Networkmap",
        "info": "",
        "x": 110,
        "y": 2840,
        "wires": []
    },
    {
        "id": "bfd5d37c.7ca3f",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "groupname",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "b259a6a5.f45d38",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M GROUP UI",
        "links": [
            "9cce1a99.a33f28"
        ],
        "x": 55,
        "y": 2020,
        "wires": [
            [
                "58f4d54b.e434ac"
            ]
        ]
    },
    {
        "id": "58f4d54b.e434ac",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Reformat for list",
        "func": "newPayload = [];\nObject.keys(msg.payload.message).forEach(function(key) {\n    var msgKey = msg.payload.message[key].friendly_name + \" (ID: \" + key + \")\";\n    var msgVar = msg.payload.message[key].friendly_name;\n    newentry = '{\"'+msgKey+'\":\" '+ msgVar+'\"}';\n    newPayload.push(msg.payload.message[key].friendly_name);\n});\n\nnewMsg = {'payload': flow.get('groupname'), 'options': newPayload}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 2020,
        "wires": [
            [
                "1610ed0c.d0e1e3"
            ]
        ]
    },
    {
        "id": "be14f64d.ceb358",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "d40979a3.d11a08",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Zigbee2MQTT version",
        "format": "{{msg.payload.version}}",
        "layout": "row-left",
        "x": 220,
        "y": 1180,
        "wires": []
    },
    {
        "id": "56f299a2.6327d8",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "d40979a3.d11a08",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Coordinator firmware",
        "format": "{{msg.payload.coordinator_firmware}}",
        "layout": "row-left",
        "x": 220,
        "y": 1220,
        "wires": []
    },
    {
        "id": "f94fee3a.19978",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "Reset CC253x",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "zigbee2mqtt/bridge/config/reset",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "ab86c3a1.ed149"
            ]
        ]
    },
    {
        "id": "1610ed0c.d0e1e3",
        "type": "ui_dropdown",
        "z": "1112a3ea.54efdc",
        "name": "Groups",
        "label": "Group",
        "tooltip": "",
        "place": "Select group",
        "group": "38009ddc.858562",
        "order": 8,
        "width": "6",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 340,
        "y": 2020,
        "wires": [
            [
                "bfd5d37c.7ca3f"
            ]
        ]
    },
    {
        "id": "ce7e9b39.36a138",
        "type": "ui_text_input",
        "z": "1112a3ea.54efdc",
        "name": "Selected device",
        "label": "Selected device",
        "tooltip": "Select device in device list",
        "group": "38009ddc.858562",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 420,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "d8fc6e0f.d831c",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M BIND DEVICE INP",
        "links": [
            "4b968044.ca533"
        ],
        "x": 55,
        "y": 1780,
        "wires": [
            [
                "90333b0d.d35758"
            ]
        ]
    },
    {
        "id": "90333b0d.d35758",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "device",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 1780,
        "wires": [
            [
                "ce7e9b39.36a138"
            ]
        ]
    },
    {
        "id": "3becb9b5.67b2a6",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "System Notification",
        "name": "",
        "x": 810,
        "y": 1580,
        "wires": []
    },
    {
        "id": "48a7a523.1678fc",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Format Data",
        "func": "\nif (msg.payload == \"add\") {\n    var action = \"Adding \";\n    var what = \"group \";\n    var cmd = \"add_group\";\n    var groupname = flow.get('newgroupname');\n}\nif(msg.payload == \"remove\") {\n        action = \"Removing \";\n        what = \"group \";\n        cmd = \"remove_group\";\n        groupname = flow.get('groupname2');\n}\nvar msg1 = { payload: groupname, topic: \"zigbee2mqtt/bridge/config/\" + cmd};\nvar msg2 = { payload: action + what + groupname };\n\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 770,
        "y": 1520,
        "wires": [
            [
                "699fc636.402658"
            ],
            [
                "3becb9b5.67b2a6"
            ]
        ]
    },
    {
        "id": "699fc636.402658",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M GROUP BIND OUT",
        "links": [
            "398af7a3.80e388"
        ],
        "x": 875,
        "y": 1500,
        "wires": []
    },
    {
        "id": "1eab9c80.093434",
        "type": "switch",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "add",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "remove",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancel",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 1520,
        "wires": [
            [
                "48a7a523.1678fc"
            ],
            [
                "48a7a523.1678fc"
            ],
            []
        ]
    },
    {
        "id": "c4fe2b67.cf9738",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "add",
        "cancel": "cancel",
        "topic": "Add group",
        "name": "",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "1eab9c80.093434"
            ]
        ]
    },
    {
        "id": "aea3baea.3e1e18",
        "type": "ui_toast",
        "z": "1112a3ea.54efdc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "remove",
        "cancel": "cancel",
        "topic": "Remove group",
        "name": "",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "1eab9c80.093434"
            ]
        ]
    },
    {
        "id": "cc1b1b4c.c16468",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Add group <b>{{flow.newgroupname}}</b>?",
        "output": "str",
        "x": 320,
        "y": 1500,
        "wires": [
            [
                "c4fe2b67.cf9738"
            ]
        ]
    },
    {
        "id": "60051e06.1b187",
        "type": "template",
        "z": "1112a3ea.54efdc",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Remove group <b>{{flow.groupname2}}</b>?",
        "output": "str",
        "x": 320,
        "y": 1540,
        "wires": [
            [
                "aea3baea.3e1e18"
            ]
        ]
    },
    {
        "id": "bc9a1621.4bf0d8",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "d9a11d4b.0417f",
        "order": 15,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Add group",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Add",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 1500,
        "wires": [
            [
                "cc1b1b4c.c16468"
            ]
        ]
    },
    {
        "id": "d87bfe09.f0b49",
        "type": "ui_button",
        "z": "1112a3ea.54efdc",
        "name": "",
        "group": "d9a11d4b.0417f",
        "order": 17,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Remove group",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Remove",
        "payloadType": "str",
        "topic": "",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "60051e06.1b187"
            ]
        ]
    },
    {
        "id": "9f335ddf.67d2b",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "groupname2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "a5f793a4.b6462",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M GROUP UI",
        "links": [
            "9cce1a99.a33f28"
        ],
        "x": 55,
        "y": 1580,
        "wires": [
            [
                "78d47084.a872f"
            ]
        ]
    },
    {
        "id": "78d47084.a872f",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Reformat for list",
        "func": "newPayload = [];\nObject.keys(msg.payload.message).forEach(function(key) {\n    var msgKey = msg.payload.message[key].friendly_name + \" (ID: \" + key + \")\";\n    var msgVar = msg.payload.message[key].friendly_name;\n    newentry = '{\"'+msgKey+'\":\" '+ msgVar+'\"}';\n    newPayload.push(msg.payload.message[key].friendly_name);\n});\n\nnewMsg = {'payload': flow.get('groupname2'), 'options': newPayload}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 1580,
        "wires": [
            [
                "45acd531.d9045c"
            ]
        ]
    },
    {
        "id": "45acd531.d9045c",
        "type": "ui_dropdown",
        "z": "1112a3ea.54efdc",
        "name": "Groups",
        "label": "",
        "tooltip": "Selected group",
        "place": "Select group",
        "group": "d9a11d4b.0417f",
        "order": 16,
        "width": "6",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 340,
        "y": 1580,
        "wires": [
            [
                "9f335ddf.67d2b"
            ]
        ]
    },
    {
        "id": "dcb4f7a6.e845b8",
        "type": "ui_text_input",
        "z": "1112a3ea.54efdc",
        "name": "",
        "label": "New group name",
        "tooltip": "",
        "group": "d9a11d4b.0417f",
        "order": 14,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "x": 130,
        "y": 1640,
        "wires": [
            [
                "bcb48a8a.a55288"
            ]
        ]
    },
    {
        "id": "bcb48a8a.a55288",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newgroupname",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "1ba11ffa.fb4e",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "38009ddc.858562",
        "order": 7,
        "width": "6",
        "height": "1",
        "name": "Group membership",
        "label": "<h3>Device group membership</h3>",
        "format": "",
        "layout": "row-left",
        "x": 130,
        "y": 1980,
        "wires": []
    },
    {
        "id": "1303ac28.147ee4",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "38009ddc.858562",
        "order": 11,
        "width": "6",
        "height": "1",
        "name": "Bind device label",
        "label": "<h3>Bind device</h3>",
        "format": "",
        "layout": "row-left",
        "x": 130,
        "y": 2140,
        "wires": []
    },
    {
        "id": "60a53cc.67bb1c4",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "d40979a3.d11a08",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "bridge status label",
        "label": "<h3>Bridge status</h3>",
        "format": "",
        "layout": "row-left",
        "x": 140,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9377320a.f91bf",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "38009ddc.858562",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "rename device label",
        "label": "<h3>Rename device</h3>",
        "format": "",
        "layout": "row-left",
        "x": 660,
        "y": 1780,
        "wires": []
    },
    {
        "id": "7c8cc223.0d85cc",
        "type": "debug",
        "z": "1112a3ea.54efdc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 740,
        "wires": []
    },
    {
        "id": "4a76279b.a9ad98",
        "type": "ui_dropdown",
        "z": "1112a3ea.54efdc",
        "name": "renderer",
        "label": "Renderer",
        "tooltip": "Graphviz renderer",
        "place": "Select renderer",
        "group": "d40979a3.d11a08",
        "order": 10,
        "width": "0",
        "height": "0",
        "passthru": false,
        "options": [
            {
                "label": "Circo",
                "value": "circo",
                "type": "str"
            },
            {
                "label": "Dot",
                "value": "dot",
                "type": "str"
            },
            {
                "label": "Neato",
                "value": "neato",
                "type": "str"
            },
            {
                "label": "Twopi",
                "value": "twopi",
                "type": "str"
            },
            {
                "label": "Fdp",
                "value": "fdp",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 340,
        "y": 2960,
        "wires": [
            [
                "884ed07d.681f1"
            ]
        ]
    },
    {
        "id": "884ed07d.681f1",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nwrenderengine",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "b6513876.8ae868",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "nwrenderengine",
        "payloadType": "flow",
        "x": 140,
        "y": 2960,
        "wires": [
            [
                "4a76279b.a9ad98"
            ]
        ]
    },
    {
        "id": "829ae398.1035",
        "type": "ui_text",
        "z": "1112a3ea.54efdc",
        "group": "d40979a3.d11a08",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "nw map label",
        "label": "<h3>Network map</h3>",
        "format": "",
        "layout": "row-left",
        "x": 430,
        "y": 2880,
        "wires": []
    },
    {
        "id": "5564a681.f2b1d8",
        "type": "link out",
        "z": "1112a3ea.54efdc",
        "name": "Z2M GENERIC IN",
        "mode": "link",
        "links": [
            "f0917fb5.7bbd7"
        ],
        "x": 255,
        "y": 100,
        "wires": []
    },
    {
        "id": "f0917fb5.7bbd7",
        "type": "link in",
        "z": "1112a3ea.54efdc",
        "name": "Z2M INPUT",
        "links": [
            "5564a681.f2b1d8"
        ],
        "x": 75,
        "y": 540,
        "wires": [
            [
                "6d78e825.7722f8"
            ]
        ]
    },
    {
        "id": "7eec6698.521ae8",
        "type": "inject",
        "z": "1112a3ea.54efdc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "af2ee649.26fd78"
            ]
        ]
    },
    {
        "id": "af2ee649.26fd78",
        "type": "change",
        "z": "1112a3ea.54efdc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nwrenderengine",
                "pt": "flow",
                "to": "circo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f0e7e75a.3440d8",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Save last msg",
        "func": "lastDevMsgs = flow.get('lastdevmsgs')||{};\n\nlastDevMsgs[msg.topic] = msg.payload;\nflow.set('lastdevmsgs', lastDevMsgs);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 740,
        "wires": [
            [
                "7c8cc223.0d85cc"
            ]
        ]
    },
    {
        "id": "4d2d1114.f6adf",
        "type": "function",
        "z": "1112a3ea.54efdc",
        "name": "Lookup device last msg",
        "func": "let lastmsgs = flow.get('lastdevmsgs');\n\nlet entry=lastmsgs[\"zigbee2mqtt/\"+msg.payload.title];\n\nlet newPayload = [];\n\nlet newentry = {\n         'title': '<h3>Last message</h3>'\n};\nnewPayload.push(newentry);\n\nfor(var prop in entry) {\n  newentry = {\n         'title': '<b>' + prop + '</b>: ' + entry[prop],\n         'description': entry[prop]\n  };\n  newPayload.push(newentry);\n}\n\nmsg.payload = newPayload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 920,
        "wires": [
            [
                "3d3db415.2dcb2c"
            ]
        ]
    },
    {
        "id": "d3fbf1d9.d4525",
        "type": "json",
        "z": "1112a3ea.54efdc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 740,
        "wires": [
            [
                "f0e7e75a.3440d8"
            ]
        ]
    },
    {
        "id": "6c06b987.6f7098",
        "type": "ui_list",
        "z": "1112a3ea.54efdc",
        "group": "902c151e.212a38",
        "name": "Devices",
        "order": 1,
        "width": "6",
        "height": "11",
        "lineType": "three",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 340,
        "y": 920,
        "wires": [
            [
                "9fa73b15.846b38"
            ]
        ]
    },
    {
        "id": "2694bda5.0e1732",
        "type": "ui_list",
        "z": "1112a3ea.54efdc",
        "group": "ee188496.59ff28",
        "name": "Selected device",
        "order": 1,
        "width": "6",
        "height": "7",
        "lineType": "three",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 1,
        "x": 820,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "3d3db415.2dcb2c",
        "type": "ui_list",
        "z": "1112a3ea.54efdc",
        "group": "ee188496.59ff28",
        "name": "Selected device msg",
        "order": 2,
        "width": "6",
        "height": "6",
        "lineType": "one",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 0,
        "topic": "",
        "x": 840,
        "y": 920,
        "wires": []
    }
]