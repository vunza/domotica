[
    {
        "id": "f39d3e21592fb58a",
        "type": "tab",
        "label": "Testes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0beaa6996a1f29f5",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d9285f121fa355e0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3ac1d7ddd2d026c3",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Painel",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "63a501c8f9a7995a",
        "type": "ui_tab",
        "name": "Testes",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "02c0eedb02a8ea3d",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "6f662945e770ab52",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "e90e23604e53cdc7",
        "type": "ui-page",
        "name": "Page 1",
        "ui": "02c0eedb02a8ea3d",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "6f662945e770ab52",
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "86f66ed150cdfb74",
        "type": "ui-group",
        "name": "My Group",
        "page": "e90e23604e53cdc7",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "09fb6d7cabdbde2a",
        "type": "ui-group",
        "name": "My Group",
        "page": "e90e23604e53cdc7",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2b8b535d0f438db2",
        "type": "ui_group",
        "name": "Iluminação",
        "tab": "412b279c821be93e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e21790eee4ef7db2",
        "type": "websocket-listener",
        "path": "ws/myendpoint",
        "wholemsg": "true"
    },
    {
        "id": "4db78eb653d6d50d",
        "type": "websocket-client",
        "path": "ws://localhost:1880/ws/echo",
        "tls": "",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "542f751e15337c46",
        "type": "websocket-listener",
        "path": "/ws/ui",
        "wholemsg": "false"
    },
    {
        "id": "3cafc110ca4b0d9e",
        "type": "websocket-listener",
        "path": "/socket",
        "wholemsg": "false"
    },
    {
        "id": "25c1a189950c0bad",
        "type": "ui_group",
        "name": "Corredor",
        "tab": "63a501c8f9a7995a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "412b279c821be93e",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fbd2a4dcc8173b77",
        "type": "aedes broker",
        "z": "f39d3e21592fb58a",
        "d": true,
        "name": "mqtt_broker",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 110,
        "y": 80,
        "wires": [
            [],
            []
        ],
        "info": "Servidor MQTT"
    },
    {
        "id": "f9978ed6cb2d3e72",
        "type": "mqtt in",
        "z": "f39d3e21592fb58a",
        "name": "SubCrredor",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 80,
        "wires": [
            [
                "35909fc17de0067a"
            ]
        ]
    },
    {
        "id": "ffc629672c973738",
        "type": "mqtt out",
        "z": "f39d3e21592fb58a",
        "name": "PubCorredor",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/set",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "066e74657af8a6bf",
        "type": "ui_button",
        "z": "f39d3e21592fb58a",
        "name": "",
        "group": "25c1a189950c0bad",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Corredor Hall",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"TOGGLE\"}",
        "payloadType": "json",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/set",
        "topicType": "msg",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "ffc629672c973738"
            ]
        ]
    },
    {
        "id": "269f8c6fa5d42e12",
        "type": "ui_switch",
        "z": "f39d3e21592fb58a",
        "name": "",
        "label": "Corredor Hall",
        "tooltip": "",
        "group": "25c1a189950c0bad",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/set",
        "topicType": "msg",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "ffc629672c973738"
            ]
        ]
    },
    {
        "id": "35909fc17de0067a",
        "type": "function",
        "z": "f39d3e21592fb58a",
        "name": "criapayload",
        "func": "\n\nif (msg.payload.state === \"ON\") {\n    msg.payload = {\"state\": \"ON\"};\n} else if (msg.payload.state === \"OFF\") {\n    msg.payload = {\"state\": \"OFF\"};;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 80,
        "wires": [
            [
                "269f8c6fa5d42e12"
            ]
        ]
    },
    {
        "id": "ada87f4566f0331a",
        "type": "mqtt in",
        "z": "f39d3e21592fb58a",
        "name": "SubLaboratorio",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "3a8377eeaac1b979"
            ]
        ]
    },
    {
        "id": "0a1d9a0f4a6dba7d",
        "type": "mqtt out",
        "z": "f39d3e21592fb58a",
        "name": "PubLaboratorio",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/set",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 880,
        "y": 360,
        "wires": []
    },
    {
        "id": "28d69b9e23d30e22",
        "type": "ui_button",
        "z": "f39d3e21592fb58a",
        "name": "",
        "group": "25c1a189950c0bad",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Laboratorio",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"TOGGLE\"}",
        "payloadType": "json",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/set",
        "topicType": "msg",
        "x": 670,
        "y": 420,
        "wires": [
            [
                "0a1d9a0f4a6dba7d"
            ]
        ]
    },
    {
        "id": "3c0bfe16a719b055",
        "type": "ui_switch",
        "z": "f39d3e21592fb58a",
        "name": "",
        "label": "Laboratorio",
        "tooltip": "",
        "group": "25c1a189950c0bad",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/set",
        "topicType": "msg",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 360,
        "wires": [
            [
                "0a1d9a0f4a6dba7d"
            ]
        ]
    },
    {
        "id": "3a8377eeaac1b979",
        "type": "function",
        "z": "f39d3e21592fb58a",
        "name": "criapayload",
        "func": "\nif (msg.payload.state === \"ON\") {\n    msg.payload = {\"state\": \"ON\"};\n} else if (msg.payload.state === \"OFF\") {\n    msg.payload = {\"state\": \"OFF\"};;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "3c0bfe16a719b055"
            ]
        ]
    },
    {
        "id": "eb3fe17ed3266f19",
        "type": "inject",
        "z": "f39d3e21592fb58a",
        "name": "AskStateTemp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\": \"\"}",
        "payloadType": "json",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "485ff16ae3b4fd36"
            ]
        ]
    },
    {
        "id": "38840896d177f5f6",
        "type": "inject",
        "z": "f39d3e21592fb58a",
        "name": "AskStateTemp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\": \"\"}",
        "payloadType": "json",
        "x": 320,
        "y": 420,
        "wires": [
            [
                "1c351fe8dbd62657"
            ]
        ]
    },
    {
        "id": "485ff16ae3b4fd36",
        "type": "mqtt out",
        "z": "f39d3e21592fb58a",
        "name": "AskState",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/get",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 480,
        "y": 140,
        "wires": [],
        "info": "Solicita estado do dispositivo, cada X tempo, para actualizar o estado do Botao."
    },
    {
        "id": "1c351fe8dbd62657",
        "type": "mqtt out",
        "z": "f39d3e21592fb58a",
        "name": "AskState",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/get",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 500,
        "y": 420,
        "wires": [],
        "info": "Solicita estado do dispositivo, cada X tempo, para actualizar o estado do Botao."
    },
    {
        "id": "0b5fdfaadf780e88",
        "type": "websocket in",
        "z": "f39d3e21592fb58a",
        "d": true,
        "name": "ServidorWS_Rx",
        "server": "542f751e15337c46",
        "client": "",
        "x": 620,
        "y": 260,
        "wires": [
            [
                "83a7777023dd9026"
            ]
        ],
        "info": "Servidor WebSocket (nó para receber dados dos clientes)."
    },
    {
        "id": "83a7777023dd9026",
        "type": "function",
        "z": "f39d3e21592fb58a",
        "d": true,
        "name": "func_devs",
        "func": "\nmsg.payload = JSON.parse(msg.payload);\nvar elementos = [];\nconst id = msg.payload[0].id;\nvar array_json = msg.payload;\nvar total_obj_json = array_json.length;\n\nfor(var cont = 0; cont < total_obj_json; cont++){\n    if(cont == id){\n        msg.payload = msg.payload[1];\n        elementos[cont] = msg;\n    }\n    else{\n         elementos[cont] = null\n    }   \n}\n\nreturn elementos;\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 260,
        "wires": [
            [
                "ffc629672c973738"
            ],
            [
                "0a1d9a0f4a6dba7d"
            ]
        ],
        "info": "Reencaminha payload, _**{\"state\":\"TOGGLE\"}**_, aos dispositivos correspondentes."
    },
    {
        "id": "93d46ef6af82411a",
        "type": "websocket out",
        "z": "f39d3e21592fb58a",
        "d": true,
        "name": "ServidorWS_Tx",
        "server": "542f751e15337c46",
        "client": "",
        "x": 380,
        "y": 260,
        "wires": [],
        "info": "Servidor WebSocket (nó para enviar dados aos clientes)."
    },
    {
        "id": "1038e34232cd3302",
        "type": "inject",
        "z": "f39d3e21592fb58a",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "93d46ef6af82411a"
            ]
        ]
    },
    {
        "id": "65b0b39179ae8e87",
        "type": "aedes broker",
        "z": "0beaa6996a1f29f5",
        "name": "mqtt_broker",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 80,
        "wires": [
            [],
            []
        ],
        "info": "Servidor MQTT"
    },
    {
        "id": "eb0cd5ea8ebc6328",
        "type": "mqtt in",
        "z": "0beaa6996a1f29f5",
        "name": "SubCrredor",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "8151acae913eb6a0"
            ]
        ]
    },
    {
        "id": "922dc88a03285b62",
        "type": "mqtt out",
        "z": "0beaa6996a1f29f5",
        "name": "PubCorredor",
        "topic": "zigbee2mqtt/0xa4c138e342bdfb48/set",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "8151acae913eb6a0",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "name": "criapayload",
        "func": "\n\nif (msg.payload.state === \"ON\") {\n    msg.payload = {\"state\": \"ON\"};\n} else if (msg.payload.state === \"OFF\") {\n    msg.payload = {\"state\": \"OFF\"};;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "039cc20dd878b1c0"
            ]
        ]
    },
    {
        "id": "60e51bfb3ea05fc0",
        "type": "mqtt in",
        "z": "0beaa6996a1f29f5",
        "name": "SubLaboratorio",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ea967754b10f50a6",
        "type": "mqtt out",
        "z": "0beaa6996a1f29f5",
        "name": "PubLaboratorio",
        "topic": "zigbee2mqtt/0x28dba7fffe1af100/set",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d9285f121fa355e0",
        "x": 820,
        "y": 360,
        "wires": []
    },
    {
        "id": "039cc20dd878b1c0",
        "type": "ui_template",
        "z": "0beaa6996a1f29f5",
        "group": "2b8b535d0f438db2",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>    \n    <style>\n        #cards_container {\n        display: block;\n        grid-gap: 0.7rem;\n        height: 100%;\n        overflow: auto;\n        }\n        \n        .nr-dashboard-template{\n        height:calc(90vh - 100px);\n        //border:1px solid blue;\n        }\n        \n        .card {\n        transition: 0.3s;\n        border-radius: 5px;\n        border: 1px solid rgba(140, 140, 140, .5);\n        background-color: #3a3b3c;\n        margin: 0px auto 10px auto;\n        text-align: center;\n        width: 100%;\n        /* Ajusta a largura da div para 100% da largura do seu contêiner pai */\n        max-width: 450px;\n        /* Define um limite máximo para a largura da div */\n        box-sizing: border-box;\n        /* Inclui padding e borda no cálculo da largura */\n        padding: 5px;\n        /* Padding opcional */\n        cursor: pointer;\n        }\n        \n        .div_img {\n        width: 30px;\n        margin: auto;\n        border-radius: 50%;\n        padding: 5px;\n        border: 1px solid rgba(140, 140, 140, .5);\n        box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);\n        }\n    </style>    \n</head>\n\n<body>    \n    <p>{{msg.payload.state}}</p>\n    <!-- DIV que contem os Dispositivos -->\n    <div id=\"cards_container\"></div>\n    <!-- DIV que contem os Dispositivos -->\n\n    <!-- Opcional: Adicionar algum script para interatividade -->\n    <script>\n        const img_lampada = '<svg fill=\"lightgray\" viewBox=\"-80 0 512 512\" ><path d=\"M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"/></svg>';\n\n        let nome = \"[Nome]\";\n\n        let cards_container = document.getElementById('cards_container');\n        \n        // Função para criar uma nova <div> com conteúdo\n        function criarDiv(Id) {  \n\n            var novaDiv = document.createElement('div');\n\n            cards_container.innerHTML += `\n            <div id=${Id + 100} class=\"card\">\n                <div class=\"div_img\" id=${Id} onclick=\"handleClick(this.id);\">${img_lampada}</div>  \n                <div class=\"div_nome\" id=\"div_nome\">${nome}</div>    \n                <div class=\"div_nome\" id=\"div_nome\">${nome}</div>                        \n            </div>`;\n           \n            //cards_container.appendChild(novaDiv);\n        }\n\n        for(var cont = 0; cont < 4; cont++){\n            criarDiv(cont);\n        }\n\n        var socket = new WebSocket(\"ws://192.168.0.3:1880/ws/ui\");\n        \n            \n         function handleClick(Id) {                     \n            var newMsg1 = [\n                {id:Id},\n                {state:\"TOGGLE\"}\n            ];\n\n            if (socket.readyState === WebSocket.OPEN) {\n                socket.send(JSON.stringify(newMsg1));\n            } \n        }\n\n                \n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "14cc11d01a92614e",
        "type": "websocket in",
        "z": "0beaa6996a1f29f5",
        "name": "ServidorWS_Rx",
        "server": "542f751e15337c46",
        "client": "",
        "x": 640,
        "y": 260,
        "wires": [
            [
                "760f84d8729e2efa"
            ]
        ],
        "info": "Servidor WebSocket (nó para receber dados dos clientes)."
    },
    {
        "id": "760f84d8729e2efa",
        "type": "function",
        "z": "0beaa6996a1f29f5",
        "name": "func_devs",
        "func": "\nmsg.payload = JSON.parse(msg.payload);\nvar elementos = [];\nconst id = msg.payload[0].id;\nvar array_json = msg.payload;\nvar total_obj_json = array_json.length;\n\nfor(var cont = 0; cont < total_obj_json; cont++){\n    if(cont == id){\n        msg.payload = msg.payload[1];\n        elementos[cont] = msg;\n    }\n    else{\n         elementos[cont] = null\n    }   \n}\n\nreturn elementos;\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 260,
        "wires": [
            [
                "922dc88a03285b62"
            ],
            [
                "ea967754b10f50a6"
            ]
        ],
        "info": "Reencaminha payload, _**{\"state\":\"TOGGLE\"}**_, aos dispositivos correspondentes."
    },
    {
        "id": "7057422addc06595",
        "type": "websocket out",
        "z": "0beaa6996a1f29f5",
        "name": "ServidorWS_Tx",
        "server": "542f751e15337c46",
        "client": "",
        "x": 400,
        "y": 260,
        "wires": [],
        "info": "Servidor WebSocket (nó para enviar dados aos clientes)."
    },
    {
        "id": "10939352affb4eae",
        "type": "inject",
        "z": "0beaa6996a1f29f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "7057422addc06595"
            ]
        ]
    },
    {
        "id": "07348d0343252ffb",
        "type": "mqtt in",
        "z": "0beaa6996a1f29f5",
        "name": "SubTodos",
        "topic": "zigbee2mqtt/#",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "d9285f121fa355e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 160,
        "wires": [
            [
                "f7ccc367c6c2dc4f"
            ]
        ]
    },
    {
        "id": "f7ccc367c6c2dc4f",
        "type": "debug",
        "z": "0beaa6996a1f29f5",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 160,
        "wires": []
    }
]